/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package joe;

import db_managment.Direct_Control_BD;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.File;
import java.math.BigDecimal;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;



/**
 *
 * @author Oscar Montes
 */
public class JPanel_CrearEntradaSalidaMercaderia extends javax.swing.JPanel {

    /**
     * Creates new form JPanel_CrearEntradaSalidaMercaderia
     */
    boolean cargoArchivo=false;
    public JPanel_CrearEntradaSalidaMercaderia() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        jDialog_CrearProducto = new javax.swing.JDialog();
        jPanel2 = new javax.swing.JPanel();
        jTextField_codigo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField_nombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton_CrearProducto = new javax.swing.JButton();
        jButton_CancelarCrearProducto = new javax.swing.JButton();
        jFormattedTextField_precioProducto = new javax.swing.JFormattedTextField();
        jFormattedTextField_cantidadProducto = new javax.swing.JFormattedTextField();
        jDialog_VerProducto = new javax.swing.JDialog();
        jLayeredPane_VerProducto = new javax.swing.JLayeredPane();
        jLabel_Producto = new javax.swing.JLabel();
        jLabel_Nombre = new javax.swing.JLabel();
        jLabel_Cantidad = new javax.swing.JLabel();
        jLabel_PrecioUnitario = new javax.swing.JLabel();
        jLabel_datoFact = new javax.swing.JLabel();
        jLabel_datoNomb = new javax.swing.JLabel();
        jLabel_datoCant = new javax.swing.JLabel();
        jLabel_datoPrecio = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel_Descripcion = new javax.swing.JLabel();
        jDialog_BuscarProductoPorCod = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jButton_BusqueProducto = new javax.swing.JButton();
        jButton_CancelaBusquedaProducto = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jTextField_busqueProducto = new javax.swing.JTextField();
        jLabel_CodNoEncontrado = new javax.swing.JLabel();
        jButton_CreaProducto = new javax.swing.JButton();
        jButton_VerProducto = new javax.swing.JButton();
        jButton_EliminaFila = new javax.swing.JButton();
        jButton_RegresarFact = new javax.swing.JButton();
        jButton_aceptarMovimiento = new javax.swing.JButton();
        jLabel_NumFacTitle = new javax.swing.JLabel();
        jLabel_FechaFact = new javax.swing.JLabel();
        jLabel_Fecha = new javax.swing.JLabel();
        jFormattedTextField_Total = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        jButton_BuscarProducto = new javax.swing.JButton();
        jLabel_NumerodeMovimiento = new javax.swing.JLabel();
        jButton_guardaImprime = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jTextField_referencia = new javax.swing.JTextField();
        jComboBox_LugarDeMov = new javax.swing.JComboBox();
        jLabel_tipoMovimiento = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_Movimiento = new javax.swing.JTable();

        jPanel2.setBackground(new java.awt.Color(153, 153, 153));

        jTextField_codigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField_codigoKeyPressed(evt);
            }
        });

        jLabel1.setText("Codigo del Producto");

        jLabel2.setText("Nombre del Producto");

        jTextField_nombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField_nombreKeyPressed(evt);
            }
        });

        jLabel3.setText("Precio del Producto");

        jLabel4.setText("Cantidad del Producto");

        jButton_CrearProducto.setText("Aceptar");
        jButton_CrearProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CrearProductoActionPerformed(evt);
            }
        });
        jButton_CrearProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton_CrearProductoKeyPressed(evt);
            }
        });

        jButton_CancelarCrearProducto.setText("Cancelar");
        jButton_CancelarCrearProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CancelarCrearProductoActionPerformed(evt);
            }
        });
        jButton_CancelarCrearProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton_CancelarCrearProductoKeyPressed(evt);
            }
        });

        jFormattedTextField_precioProducto.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        jFormattedTextField_precioProducto.setText("0.00");
        jFormattedTextField_precioProducto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jFormattedTextField_precioProductoFocusGained(evt);
            }
        });
        jFormattedTextField_precioProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jFormattedTextField_precioProductoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jFormattedTextField_precioProductoKeyTyped(evt);
            }
        });

        jFormattedTextField_cantidadProducto.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        jFormattedTextField_cantidadProducto.setText("0");
        jFormattedTextField_cantidadProducto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jFormattedTextField_cantidadProductoFocusGained(evt);
            }
        });
        jFormattedTextField_cantidadProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jFormattedTextField_cantidadProductoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jFormattedTextField_cantidadProductoKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton_CrearProducto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton_CancelarCrearProducto)
                .addGap(27, 27, 27))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jFormattedTextField_precioProducto, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField_codigo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                    .addComponent(jTextField_nombre, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jFormattedTextField_cantidadProducto))
                .addGap(75, 75, 75))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_codigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jFormattedTextField_precioProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jFormattedTextField_cantidadProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_CrearProducto)
                    .addComponent(jButton_CancelarCrearProducto))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jDialog_CrearProductoLayout = new javax.swing.GroupLayout(jDialog_CrearProducto.getContentPane());
        jDialog_CrearProducto.getContentPane().setLayout(jDialog_CrearProductoLayout);
        jDialog_CrearProductoLayout.setHorizontalGroup(
            jDialog_CrearProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jDialog_CrearProductoLayout.setVerticalGroup(
            jDialog_CrearProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jDialog_VerProducto.setMinimumSize(new java.awt.Dimension(483, 310));
        jDialog_VerProducto.setModal(true);

        jLayeredPane_VerProducto.setBackground(java.awt.Color.white);
        jLayeredPane_VerProducto.setMaximumSize(new java.awt.Dimension(473, 303));
        jLayeredPane_VerProducto.setMinimumSize(new java.awt.Dimension(473, 303));

        jLabel_Producto.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel_Producto.setForeground(new java.awt.Color(0, 51, 51));
        jLabel_Producto.setText("Producto");

        jLabel_Nombre.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel_Nombre.setForeground(new java.awt.Color(0, 51, 51));
        jLabel_Nombre.setText("Nombre");

        jLabel_Cantidad.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel_Cantidad.setForeground(new java.awt.Color(0, 51, 51));
        jLabel_Cantidad.setText("Cantidad");

        jLabel_PrecioUnitario.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel_PrecioUnitario.setForeground(new java.awt.Color(0, 51, 51));
        jLabel_PrecioUnitario.setText("Precio Unitario");

        jLabel_datoFact.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel_datoFact.setForeground(new java.awt.Color(0, 51, 51));

        jLabel_datoNomb.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel_datoNomb.setForeground(new java.awt.Color(0, 51, 51));

        jLabel_datoCant.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel_datoCant.setForeground(new java.awt.Color(0, 51, 51));

        jLabel_datoPrecio.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel_datoPrecio.setForeground(new java.awt.Color(0, 51, 51));

        jButton2.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 51, 51));
        jButton2.setText("Aceptar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton2KeyPressed(evt);
            }
        });

        jLabel_Descripcion.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel_Descripcion.setForeground(new java.awt.Color(0, 51, 51));
        jLabel_Descripcion.setText("Descripcion");

        javax.swing.GroupLayout jLayeredPane_VerProductoLayout = new javax.swing.GroupLayout(jLayeredPane_VerProducto);
        jLayeredPane_VerProducto.setLayout(jLayeredPane_VerProductoLayout);
        jLayeredPane_VerProductoLayout.setHorizontalGroup(
            jLayeredPane_VerProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane_VerProductoLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jLayeredPane_VerProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jLayeredPane_VerProductoLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel_Cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel_datoCant, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(74, 74, 74))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jLayeredPane_VerProductoLayout.createSequentialGroup()
                        .addComponent(jLabel_Nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel_datoNomb, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jLayeredPane_VerProductoLayout.createSequentialGroup()
                .addGroup(jLayeredPane_VerProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane_VerProductoLayout.createSequentialGroup()
                        .addGap(207, 207, 207)
                        .addComponent(jLabel_Producto))
                    .addGroup(jLayeredPane_VerProductoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel_datoFact, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jLayeredPane_VerProductoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane_VerProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel_Descripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jLayeredPane_VerProductoLayout.createSequentialGroup()
                        .addComponent(jLabel_PrecioUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel_datoPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane_VerProductoLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(98, 98, 98))
        );
        jLayeredPane_VerProductoLayout.setVerticalGroup(
            jLayeredPane_VerProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane_VerProductoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane_VerProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jLayeredPane_VerProductoLayout.createSequentialGroup()
                        .addComponent(jLabel_Producto, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addGroup(jLayeredPane_VerProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jLayeredPane_VerProductoLayout.createSequentialGroup()
                                .addComponent(jLabel_datoFact, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(11, 11, 11)
                                .addComponent(jLabel_datoNomb, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel_Nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(jLayeredPane_VerProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel_Cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_datoCant, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel_PrecioUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel_datoPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel_Descripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );
        jLayeredPane_VerProducto.setLayer(jLabel_Producto, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane_VerProducto.setLayer(jLabel_Nombre, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane_VerProducto.setLayer(jLabel_Cantidad, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane_VerProducto.setLayer(jLabel_PrecioUnitario, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane_VerProducto.setLayer(jLabel_datoFact, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane_VerProducto.setLayer(jLabel_datoNomb, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane_VerProducto.setLayer(jLabel_datoCant, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane_VerProducto.setLayer(jLabel_datoPrecio, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane_VerProducto.setLayer(jButton2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane_VerProducto.setLayer(jLabel_Descripcion, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDialog_VerProductoLayout = new javax.swing.GroupLayout(jDialog_VerProducto.getContentPane());
        jDialog_VerProducto.getContentPane().setLayout(jDialog_VerProductoLayout);
        jDialog_VerProductoLayout.setHorizontalGroup(
            jDialog_VerProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane_VerProducto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDialog_VerProductoLayout.setVerticalGroup(
            jDialog_VerProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane_VerProducto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jButton_BusqueProducto.setText("Aceptar");
        jButton_BusqueProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_BusqueProductoActionPerformed(evt);
            }
        });
        jButton_BusqueProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton_BusqueProductoKeyPressed(evt);
            }
        });

        jButton_CancelaBusquedaProducto.setText("Cancelar");
        jButton_CancelaBusquedaProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CancelaBusquedaProductoActionPerformed(evt);
            }
        });

        jLabel5.setText("Ingrese el Cod");

        jTextField_busqueProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField_busqueProductoKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton_BusqueProducto)
                        .addGap(42, 42, 42)
                        .addComponent(jButton_CancelaBusquedaProducto))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel_CodNoEncontrado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField_busqueProducto, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE))))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(81, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextField_busqueProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel_CodNoEncontrado, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_BusqueProducto)
                    .addComponent(jButton_CancelaBusquedaProducto))
                .addGap(52, 52, 52))
        );

        javax.swing.GroupLayout jDialog_BuscarProductoPorCodLayout = new javax.swing.GroupLayout(jDialog_BuscarProductoPorCod.getContentPane());
        jDialog_BuscarProductoPorCod.getContentPane().setLayout(jDialog_BuscarProductoPorCodLayout);
        jDialog_BuscarProductoPorCodLayout.setHorizontalGroup(
            jDialog_BuscarProductoPorCodLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jDialog_BuscarProductoPorCodLayout.setVerticalGroup(
            jDialog_BuscarProductoPorCodLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jButton_CreaProducto.setText("Crear Producto");
        jButton_CreaProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CreaProductoActionPerformed(evt);
            }
        });

        jButton_VerProducto.setText("Ver Producto");
        jButton_VerProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_VerProductoActionPerformed(evt);
            }
        });

        jButton_EliminaFila.setText("Eliminar Fila");
        jButton_EliminaFila.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_EliminaFilaActionPerformed(evt);
            }
        });

        jButton_RegresarFact.setText("Regresar");
        jButton_RegresarFact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_RegresarFactActionPerformed(evt);
            }
        });

        jButton_aceptarMovimiento.setText("Guardar");
        jButton_aceptarMovimiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_aceptarMovimientoActionPerformed(evt);
            }
        });

        jLabel_NumFacTitle.setText("Numero Doc");

        jLabel_FechaFact.setText("Fecha");

        jLabel_Fecha.setText("Aqui va la fecha");

        jFormattedTextField_Total.setEditable(false);
        jFormattedTextField_Total.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("C#,##0.00;(C#,##0.00)"))));
        jFormattedTextField_Total.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jFormattedTextField_Total.setText("0.00");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Total");

        jButton_BuscarProducto.setText("Buscar Producto");
        jButton_BuscarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_BuscarProductoActionPerformed(evt);
            }
        });

        jLabel_NumerodeMovimiento.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel_NumerodeMovimiento.setForeground(new java.awt.Color(0, 51, 51));
        jLabel_NumerodeMovimiento.setText("Num");

        jButton_guardaImprime.setText("Guarda e Imprimir");
        jButton_guardaImprime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_guardaImprimeActionPerformed(evt);
            }
        });

        jLabel7.setText("Referencia");

        jComboBox_LugarDeMov.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Inventario General", "Bodega" }));

        jLabel_tipoMovimiento.setText("Entrada a:");

        jButton1.setText("Cargar Archivo Excel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable_Movimiento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTable_Movimiento.setCellSelectionEnabled(true);
        jTable_Movimiento.setFillsViewportHeight(true);
        jTable_Movimiento.setSurrendersFocusOnKeystroke(true);
        jTable_Movimiento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable_MovimientoKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(jTable_Movimiento);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(203, 203, 203)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton_aceptarMovimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jFormattedTextField_Total, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton_guardaImprime, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton_RegresarFact, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel_NumFacTitle)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel_FechaFact, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel_Fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel_tipoMovimiento)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBox_LugarDeMov, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField_referencia, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jButton_CreaProducto)
                                        .addComponent(jButton_VerProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton_EliminaFila, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton_BuscarProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel_NumerodeMovimiento))
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 730, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel_NumFacTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel_NumerodeMovimiento)
                        .addGap(18, 18, 18)
                        .addComponent(jButton_CreaProducto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton_VerProducto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton_EliminaFila)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton_BuscarProducto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1)
                        .addGap(63, 63, 63))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_referencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(jComboBox_LugarDeMov, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_tipoMovimiento)
                            .addComponent(jLabel_Fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_FechaFact, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton_aceptarMovimiento)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton_RegresarFact))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jFormattedTextField_Total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton_guardaImprime)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }//GEN-END:initComponents

    private void jButton_CreaProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CreaProductoActionPerformed
        this.creacionProductoPanel();
    }//GEN-LAST:event_jButton_CreaProductoActionPerformed

    private void jButton_VerProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_VerProductoActionPerformed
        if (jTable_Movimiento.isEditing()) {
            jTable_Movimiento.getCellEditor().cancelCellEditing();

        }
        MyTableModel_FACT model = (MyTableModel_FACT) jTable_Movimiento.getModel();
        int row = jTable_Movimiento.getSelectedRow();
        String idProducto = model.getValueAt(row, 0).toString();//obtiene el id
        //del producto seleccionado para VerProducto
        if (!"".equals(idProducto)) {//verifica que se quiere ver un producto
            this.verProducto(idProducto);
        } // Si no selecciono un producto entonces que busque el producto por cod
        else {
            jDialog_BuscarProductoPorCod.setSize(295, 243);
            jDialog_BuscarProductoPorCod.setVisible(true);
        }
    }//GEN-LAST:event_jButton_VerProductoActionPerformed

    private void jButton_EliminaFilaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_EliminaFilaActionPerformed
        this.eliminarFila();
    }//GEN-LAST:event_jButton_EliminaFilaActionPerformed

    private void jButton_RegresarFactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_RegresarFactActionPerformed
        if(cargoArchivo){
            this.limpiarProductos();
        }
        this.regresar();
    }//GEN-LAST:event_jButton_RegresarFactActionPerformed

    private void jButton_aceptarMovimientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_aceptarMovimientoActionPerformed

        this.guardarMovimiento();

    }//GEN-LAST:event_jButton_aceptarMovimientoActionPerformed

    private void jButton_BuscarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_BuscarProductoActionPerformed
        NewJDialog_Buscador buscador = new NewJDialog_Buscador();
        buscador.actualizaTablaParaInventario();
        String id = buscador.getIdProducto();
        MyTableModel_FACT model = (MyTableModel_FACT) jTable_Movimiento.getModel();
        int row = this.jTable_Movimiento.getSelectedRow();
        model.setValueAt(id, row, 0);
        this.setFocusTablaMovimiento(1);
    }//GEN-LAST:event_jButton_BuscarProductoActionPerformed

    private void jButton_guardaImprimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_guardaImprimeActionPerformed
        this.guardarMovimiento();
        
        

    }//GEN-LAST:event_jButton_guardaImprimeActionPerformed

    private void jTextField_codigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_codigoKeyPressed
        //Se presiono enter en el textfield de codigo por lo tanto tiene que
        // hacer que se haga focus el que sigue
        if (evt.getKeyCode() == 10) {
            this.jTextField_codigo.transferFocus();

        }
    }//GEN-LAST:event_jTextField_codigoKeyPressed

    private void jTextField_nombreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_nombreKeyPressed
        if (evt.getKeyCode() == 10) {
            this.jTextField_nombre.transferFocus();
        }
    }//GEN-LAST:event_jTextField_nombreKeyPressed

    private void jButton_CrearProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CrearProductoActionPerformed
        this.CrearProducto();
        this.clearCrearProducto();
    }//GEN-LAST:event_jButton_CrearProductoActionPerformed

    private void jButton_CrearProductoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton_CrearProductoKeyPressed
        if (evt.getKeyCode() == 10) {
            this.CrearProducto();
        }
    }//GEN-LAST:event_jButton_CrearProductoKeyPressed

    private void jButton_CancelarCrearProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CancelarCrearProductoActionPerformed
        this.clearCrearProducto();
        this.jDialog_CrearProducto.dispose();
        //Para que el usuario se mantenga en la tabla
        this.setFocusTablaMovimiento(0);
    }//GEN-LAST:event_jButton_CancelarCrearProductoActionPerformed

    private void jButton_CancelarCrearProductoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton_CancelarCrearProductoKeyPressed
        if (evt.getKeyCode() == 10) {
            this.jButton_CancelarCrearProducto.doClick();
        }
    }//GEN-LAST:event_jButton_CancelarCrearProductoKeyPressed

    private void jFormattedTextField_precioProductoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextField_precioProductoFocusGained
        this.jFormattedTextField_precioProducto.selectAll();
    }//GEN-LAST:event_jFormattedTextField_precioProductoFocusGained

    private void jFormattedTextField_precioProductoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextField_precioProductoKeyPressed
        if (evt.getKeyCode() == 10) {
            this.jFormattedTextField_precioProducto.transferFocus();

        }
        if (evt.isControlDown()) {
            evt.consume();
        }
    }//GEN-LAST:event_jFormattedTextField_precioProductoKeyPressed

    private void jFormattedTextField_precioProductoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextField_precioProductoKeyTyped
        int tecla = evt.getKeyChar();
        if (tecla == KeyEvent.VK_COMMA) {
            return;
        }
        if (tecla == KeyEvent.VK_PERIOD) {
            return;
        }
        if (!Character.isDigit(tecla) & !Character.isISOControl(evt.getKeyChar())) {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();

        }
    }//GEN-LAST:event_jFormattedTextField_precioProductoKeyTyped

    private void jFormattedTextField_cantidadProductoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextField_cantidadProductoFocusGained
        this.jFormattedTextField_cantidadProducto.selectAll();
    }//GEN-LAST:event_jFormattedTextField_cantidadProductoFocusGained

    private void jFormattedTextField_cantidadProductoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextField_cantidadProductoKeyPressed
        if (evt.getKeyCode() == 10) {
            this.jFormattedTextField_cantidadProducto.transferFocus();

        }
        if (evt.isControlDown()) {
            evt.consume();
        }
    }//GEN-LAST:event_jFormattedTextField_cantidadProductoKeyPressed

    private void jFormattedTextField_cantidadProductoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextField_cantidadProductoKeyTyped
        int tecla = evt.getKeyChar();
        if (!Character.isDigit(tecla) & !Character.isISOControl(evt.getKeyChar())) {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();

        }
    }//GEN-LAST:event_jFormattedTextField_cantidadProductoKeyTyped

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.setFocusTablaMovimiento(0);
        this.jDialog_VerProducto.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton2KeyPressed
        if (evt.getKeyCode() == 10) {
            this.setFocusTablaMovimiento(0);
            this.jDialog_VerProducto.dispose();
        }
    }//GEN-LAST:event_jButton2KeyPressed

    private void jButton_BusqueProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_BusqueProductoActionPerformed
        this.buscarProducto();
    }//GEN-LAST:event_jButton_BusqueProductoActionPerformed

    private void jButton_BusqueProductoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton_BusqueProductoKeyPressed
        if (evt.getKeyCode() == 10) {
            this.buscarProducto();
        }
    }//GEN-LAST:event_jButton_BusqueProductoKeyPressed

    private void jButton_CancelaBusquedaProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CancelaBusquedaProductoActionPerformed
        this.jDialog_BuscarProductoPorCod.dispose();
        this.jLabel_CodNoEncontrado.setText("");
        this.setFocusTablaMovimiento(0);
    }//GEN-LAST:event_jButton_CancelaBusquedaProductoActionPerformed

    private void jTextField_busqueProductoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_busqueProductoKeyPressed
        if (evt.getKeyCode() == 10) {
            this.jTextField_busqueProducto.transferFocus();

        }
    }//GEN-LAST:event_jTextField_busqueProductoKeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JFileChooser filechooser= new JFileChooser();
        int value = filechooser.showOpenDialog(null);
        this.cargoArchivo=true;
        this.jFormattedTextField_Total.setValue(BigDecimal.ZERO);
        if (value == JFileChooser.APPROVE_OPTION) {
                File file = filechooser.getSelectedFile();
                String direccion=(String.valueOf(file));
                try{
                this.cargarMovimiento(direccion);}
                catch(Exception e){
                    this.clearAll();
                }
               
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable_MovimientoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable_MovimientoKeyPressed
        int tecla = evt.getKeyCode();
        if (tecla == KeyEvent.VK_F9) {
            this.eliminarFila();
        }
    }//GEN-LAST:event_jTable_MovimientoKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JButton jButton1;
    javax.swing.JButton jButton2;
    javax.swing.JButton jButton_BuscarProducto;
    javax.swing.JButton jButton_BusqueProducto;
    javax.swing.JButton jButton_CancelaBusquedaProducto;
    javax.swing.JButton jButton_CancelarCrearProducto;
    javax.swing.JButton jButton_CreaProducto;
    javax.swing.JButton jButton_CrearProducto;
    javax.swing.JButton jButton_EliminaFila;
    javax.swing.JButton jButton_RegresarFact;
    javax.swing.JButton jButton_VerProducto;
    javax.swing.JButton jButton_aceptarMovimiento;
    javax.swing.JButton jButton_guardaImprime;
    javax.swing.JComboBox jComboBox_LugarDeMov;
    javax.swing.JDialog jDialog_BuscarProductoPorCod;
    javax.swing.JDialog jDialog_CrearProducto;
    javax.swing.JDialog jDialog_VerProducto;
    javax.swing.JFormattedTextField jFormattedTextField_Total;
    javax.swing.JFormattedTextField jFormattedTextField_cantidadProducto;
    javax.swing.JFormattedTextField jFormattedTextField_precioProducto;
    javax.swing.JLabel jLabel1;
    javax.swing.JLabel jLabel2;
    javax.swing.JLabel jLabel3;
    javax.swing.JLabel jLabel4;
    javax.swing.JLabel jLabel5;
    javax.swing.JLabel jLabel6;
    javax.swing.JLabel jLabel7;
    javax.swing.JLabel jLabel_Cantidad;
    javax.swing.JLabel jLabel_CodNoEncontrado;
    javax.swing.JLabel jLabel_Descripcion;
    javax.swing.JLabel jLabel_Fecha;
    javax.swing.JLabel jLabel_FechaFact;
    javax.swing.JLabel jLabel_Nombre;
    javax.swing.JLabel jLabel_NumFacTitle;
    javax.swing.JLabel jLabel_NumerodeMovimiento;
    javax.swing.JLabel jLabel_PrecioUnitario;
    javax.swing.JLabel jLabel_Producto;
    javax.swing.JLabel jLabel_datoCant;
    javax.swing.JLabel jLabel_datoFact;
    javax.swing.JLabel jLabel_datoNomb;
    javax.swing.JLabel jLabel_datoPrecio;
    javax.swing.JLabel jLabel_tipoMovimiento;
    javax.swing.JLayeredPane jLayeredPane_VerProducto;
    javax.swing.JPanel jPanel1;
    javax.swing.JPanel jPanel2;
    javax.swing.JScrollPane jScrollPane2;
    javax.swing.JTable jTable_Movimiento;
    javax.swing.JTextField jTextField_busqueProducto;
    javax.swing.JTextField jTextField_codigo;
    javax.swing.JTextField jTextField_nombre;
    javax.swing.JTextField jTextField_referencia;
    // End of variables declaration//GEN-END:variables
    private void creacionProductoPanel() {
        //En caso de que quiera crear un producto mientras se este editando
        if (jTable_Movimiento.isEditing()) {
            jTable_Movimiento.getCellEditor().cancelCellEditing();
            this.jDialog_CrearProducto.setSize(500, 300);
            this.jDialog_CrearProducto.setVisible(true);
            return;
        }

        //Llama a la ventana para crear el producto
        this.jDialog_CrearProducto.setSize(500, 300);
        this.jDialog_CrearProducto.setVisible(true);

    }
     /**
     * Este metodo permite mostrar toda la informacion del producto
     *
     * @param idProducto
     */
    private void verProducto(String idProducto) {
        Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
        String articulo = AdminBD.verNombreProductoPorCodigo(idProducto);
        BigDecimal PrecioUnitario = AdminBD.verPrecio(idProducto);
        int cantidad = AdminBD.verCantidadInvGeneral(idProducto);
        jLabel_datoCant.setText(Integer.toString(cantidad));
        jLabel_datoFact.setText(jLabel_NumerodeMovimiento.getText());
        jLabel_datoNomb.setText(articulo);
        jLabel_datoPrecio.setText(PrecioUnitario.toString());
        String detalle = AdminBD.verDetalle(idProducto);
        //Si en la base el detalle es null
        if (detalle == null) {
            jLabel_Descripcion.setText("Descripcion  " + "Este producto"
                    + " no tiene ningun detalle");
            jDialog_VerProducto.setVisible(true);
            return;
        }
        jLabel_Descripcion.setText("Descripcion  " + detalle);
        jDialog_VerProducto.setVisible(true);

    }
    
    /**
     * Este metodo es para poder eliminar una fila de la tabla de 
     * crear movimiento
     */
    private void eliminarFila() {
        MyTableModel_FACT model = (MyTableModel_FACT) jTable_Movimiento.getModel();
        int row = jTable_Movimiento.getSelectedRow();
        ///Si se esta escribiendo en la celda para el editor y luego elimina la
        // fila
        if (jTable_Movimiento.isEditing()) {
            jTable_Movimiento.getCellEditor().cancelCellEditing();
            jTable_Movimiento.revalidate();
            jTable_Movimiento.repaint();
            jTable_Movimiento.requestFocus();

        }
        String subTotal = model.getValueAt(row, 4).toString();
        if (subTotal != "") {
            //Elimina un producto ya ingresado y actualiza el total
            BigDecimal subtotal = new BigDecimal(subTotal);
            model.removeRow(row);
            BigDecimal totalFact = this.corregirDato(
                    this.jFormattedTextField_Total.getText());
            this.jFormattedTextField_Total.setValue(
                    totalFact.subtract(subtotal));
            jTable_Movimiento.revalidate();
            jTable_Movimiento.repaint();
            jTable_Movimiento.requestFocus();
        } else { //Si es vacio el subtotal significa que no tiene que actualizar
            // el subtotal
            model.removeRow(row);
            jTable_Movimiento.revalidate();
            jTable_Movimiento.repaint();
            jTable_Movimiento.requestFocus();

        }
    }
    
     private void regresar() {
        VentanaDeInicio miVentana = VentanaDeInicio.getInstance();
        JPanel_Inventario panelInventario = new JPanel_Inventario();
        panelInventario.setSize(this.getSize());
        panelInventario.setLocation(this.getLocation());
        miVentana.remove(this);
        miVentana.add(panelInventario);
        miVentana.setTitle("Inventario");
        panelInventario.setVisible(true);
        miVentana.revalidate();
        miVentana.repaint();
    }
     
     /**
     * Este metodo permite que vuelva a la tabla y seleciones la fila donde
     * quedo o la siguiente en la tabla movimiento
     *
     * @param cantidad
     */
    private void setFocusTablaMovimiento(int cantidad) {
        jTable_Movimiento.revalidate();
        jTable_Movimiento.repaint();
        jTable_Movimiento.changeSelection(jTable_Movimiento.getSelectedRow()
                + cantidad, jTable_Movimiento.getSelectedColumn(), false, false);
        jTable_Movimiento.requestFocus();
    }

    /**
     * Este metodo crea un producto en movimiento
     */
    private void CrearProducto() {
        Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
        DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
        Date date = new Date();
        String codigo = this.jTextField_codigo.getText();
        boolean existeProducto = AdminBD.verSiExisteCod(codigo);
        if (!existeProducto) {
            BigDecimal bd = new BigDecimal(
                    this.jFormattedTextField_precioProducto.
                    getValue().toString());
            AdminBD.crearProducto(codigo, this.jTextField_nombre.getText(),
                    bd, 0, dateFormat.format(date), "A", null, 1);
            AdminBD.insertarEnInventario(this.jTextField_codigo.getText(),
                    1, Integer.parseInt(this.jFormattedTextField_cantidadProducto.getValue()
                            .toString()));
            this.clearCrearProducto();
            this.jDialog_CrearProducto.dispose();
            MyTableModel_FACT model = (MyTableModel_FACT) jTable_Movimiento.getModel();
            model.setValueAt(codigo, jTable_Movimiento.getSelectedRow(), 0);
            //Vuelve a cargar la informacion para el editor de la primer columna
            this.cargarSeleccionadorProductos();
            this.setFocusTablaMovimiento(1);
        } else {
            JOptionPane.showMessageDialog(
                    null,
                    "ESTE Cod ya existe en el inventario",
                    "Alert!", JOptionPane.ERROR_MESSAGE);
            this.jTextField_codigo.setText("");
            this.jButton_CrearProducto.transferFocus();
            this.jButton_CancelarCrearProducto.transferFocus();
        }
    }
    
      private void clearCrearProducto() {
        this.jTextField_codigo.setText("");
        this.jTextField_nombre.setText("");
        this.jFormattedTextField_cantidadProducto.setText("0");
        this.jFormattedTextField_precioProducto.setText("0.00");

    }
      
      /**
     * Permite buscar el producto cuando el usuario presiona el boton buscar
     * producto en crear movimiento(Entrada o Salida de Mercaderia)
     */
    private void buscarProducto() {
        Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
        String idProducto = this.jTextField_busqueProducto.getText();
        boolean existeProducto = AdminBD.verSiExisteCod(idProducto);
        if (existeProducto) {
            this.jDialog_BuscarProductoPorCod.dispose();
            this.verProducto(idProducto);
            this.jTextField_busqueProducto.setText("");
            this.jLabel_CodNoEncontrado.setText("");
            return;
        }
        this.jLabel_CodNoEncontrado.setText("Cod. No Existe");
        this.jTextField_busqueProducto.setText("");
        this.jButton_BusqueProducto.transferFocus();
        this.jButton_CancelaBusquedaProducto.transferFocus();
    }
    /**
     * Este metodo permite personalizar la tabla de crear Movimiento
     */
    public void personalizarTablaMovimiento() {
        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        Date date = new Date();
        this.jLabel_Fecha.setText(dateFormat.format(date));
        String[] columnNames = {"Cod. Articulo", "Articulo",
            "Cantidad", "Precio.Unit",
            "Sub-Total"};
        List<Object[]> data = new ArrayList<Object[]>();
        //Agrega el modelo a la factura
        MyTableModel_FACT model = new MyTableModel_FACT(columnNames, data);
        //Agrega 20 filas
        model.addRow(20);
        this.jTable_Movimiento.setModel(model);
       

    }

    /**
     * De vuelve un String[] con toda la informacion de una fila de una tabla
     *
     * @param data //Viene de un consulta UNICAMENTE de una fila
     * @return
     */
    private String[] obtenerFila(Object[][] data) {
        //System.out.println("ESTO ES LO QUE QUIERO");
        int numFilas = data.length;
        String[] string = new String[numFilas];
        int numColumnas = data[0].length;
        for (int row = 0; row < numFilas; row++) {
            for (int column = 0; column < numColumnas; column++) {
                string[row] = data[row][column].toString();

            }

        }
        return string;
    }
    /**
     * Este metodo permite corregir el dato que tiene el signo de C y ademas que
     * puede tener comas ya que el tipo Decimal en la base solo puede tener
     * puntos y no comas.
     *
     * @param Dato
     * @return
     */
    private BigDecimal corregirDato(String Dato) {
        String datoAcorregir = Dato.replace("C", "");
        DecimalFormat decimalformat = (DecimalFormat) NumberFormat.getInstance();
        decimalformat.setParseBigDecimal(true);
        BigDecimal DatoCorregido = null;
        try {
            DatoCorregido = (BigDecimal) decimalformat.parseObject(datoAcorregir);
        } catch (ParseException ex) {
            Logger.getLogger(MyTableModelListener_FACT.class.getName()).log(Level.SEVERE, null, ex);
        }
        return DatoCorregido;

    }
    /**
     * Este metodo convierte un string que es un decimal a bigdecimal
     *
     * @param numero
     * @return
     */
    private BigDecimal StringtoBigDecimal(String numero) {
        DecimalFormat decimalfC = (DecimalFormat) NumberFormat.getInstance();
        decimalfC.setParseBigDecimal(true);
        BigDecimal numeroCorregido = null;
        try {
            numeroCorregido = (BigDecimal) decimalfC.parseObject(numero);
        } catch (ParseException ex) {
            Logger.getLogger(JPanel_VerFactura.class.getName()).log(Level.SEVERE, null, ex);
        }
        return numeroCorregido;

    }

    public void agregarListenerRenders() {
        Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
        //Gana la atencion en el panel
        jTable_Movimiento.requestFocus();
        jTable_Movimiento.changeSelection(0, 0, false, false);
        //AGREGA EL LISTENER QUE PERMITE HACER TODOS LOS EVENTOS DENTRO DE LA 
        //TABLA DE FACTURA //IMPORTANTE ESTOS EVENTOS ESTAN EN LA CLASE DE
        //MY TABLE MODEL LISTENER EN el metodo: tableChanged(TableModelEvent e)
        this.jTable_Movimiento.getModel().addTableModelListener(
                new MyTableModelListener_FACT(this.jTable_Movimiento, "",
                        this.jFormattedTextField_Total, AdminBD));
        
        //Costumisando Precio y Cantidad (Solo van a permitir numeros)
        DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
        rightRenderer.setHorizontalAlignment(JLabel.RIGHT);

        this.jTable_Movimiento.getColumnModel().getColumn(2).
                setCellRenderer(rightRenderer);
        this.jTable_Movimiento.getColumnModel().getColumn(3).
                setCellRenderer(new CurrencyRender());
        this.jTable_Movimiento.getColumnModel().getColumn(4).
                setCellRenderer(new CurrencyRender());
        this.jTable_Movimiento.getColumnModel().getColumn(2).
                setCellEditor(new EditorDeCelda_Cantidad());
        this.jTable_Movimiento.getColumnModel().getColumn(3).
                setCellEditor(new EditorDeCeldaNumeros());
        //Demasiado importante ******Permite que se pueda editar apenas se 
        //ingresan datos*****
        this.jTable_Movimiento.setSurrendersFocusOnKeystroke(true);

      

    }   
    public void cargarSeleccionadorProductos() {
        Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
        AdminBD.verCodigos();
        //Permite que la primera columna de Codigos se desplace segun lo que
        // haya en la base de datos
        //Si no existen productos en la base que no los carge al editor
        if (AdminBD.getData().length <= 0) {
            return;
        }
        String[] idproductos = this.obtenerFila(AdminBD.getData());
        this.jTable_Movimiento.getColumnModel().getColumn(0).
                setCellEditor(new SeleccionadorEditor(idproductos, jTable_Movimiento));

    }
    

    private void guardarMovimiento() {
        if(this.jTextField_referencia.getText().equals("")){
        JOptionPane.showMessageDialog(
                            null,
                            "Debe de ingresar una referencia de la entrada de mercaderia",
                            "Alert!", JOptionPane.ERROR_MESSAGE);
        return;
        }
        this.crearMovimiento();
        this.guardarProductosMovimiento();
        this.clearAll();
    }

    private void crearMovimiento() {
        VentanaDeInicio mVentana= VentanaDeInicio.getInstance();
        Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
        String detalle= this.jTextField_referencia.getText();
        int idLugarMovimiento=1;
        if(this.jComboBox_LugarDeMov.getSelectedItem().toString().equals("Bodega")){
               idLugarMovimiento=2;
        
        }
        BigDecimal valorMovimiento = this.corregirDato(this.jFormattedTextField_Total.getText());
        if(mVentana.getTitle().equals("Salida de Mercaderia")){
            AdminBD.insertarmovimiento(detalle,2, idLugarMovimiento, valorMovimiento);
            return;
        }
        AdminBD.insertarmovimiento(detalle,1, idLugarMovimiento, valorMovimiento);
    }

    private void guardarProductosMovimiento() {
        Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
        MyTableModel_FACT model = (MyTableModel_FACT) this.jTable_Movimiento.getModel();
        String[][] infoTablaMov = this.obtenerInfoTablaMovimiento();
        int rows = infoTablaMov.length;
        int idMovimiento = Integer.parseInt(this.jLabel_NumerodeMovimiento.getText());
        //Recorre la informacion de la tabla para obtener los datos para 
        //insertar los productos en el movimiento
        for (int i = 0; i < rows; i++) {
            //Si la fila esta vacia
            if (model.getValueAt(i, 0) != "") {
                String idProducto = infoTablaMov[i][0];
                int idVersion = AdminBD.veridVersionActivaProductoPorCodigo(idProducto);
                String CantidadSinCorregir = infoTablaMov[i][2].toString();
                DecimalFormat decimalfC = (DecimalFormat) NumberFormat.getInstance();
                decimalfC.setParseBigDecimal(true);
                BigDecimal cantidadB = null;
                try {
                    cantidadB = (BigDecimal) decimalfC.parseObject(CantidadSinCorregir);
                } catch (ParseException ex) {
                    Logger.getLogger(MyTableModelListener_FACT.class.
                            getName()).log(Level.SEVERE, null, ex);
                }
                int cantidadMov = cantidadB.intValue();
                String precioSinCorregir = infoTablaMov[i][3];
                BigDecimal PrecioVenta = this.corregirDato(precioSinCorregir);
                AdminBD.insertarProductoCantidadMovimiento(idProducto,idVersion,idMovimiento,cantidadMov,PrecioVenta);
                

            }
        }
    }
    /**
     * Este metodo devuelve toda la informacion de la tabla de crear movimiento
     *
     * @return
     */
    private String[][] obtenerInfoTablaMovimiento() {
        MyTableModel_FACT model = (MyTableModel_FACT) this.jTable_Movimiento.getModel();
        int filas = model.getRowCount();
        String[][] infoTablaFactura = new String[filas][5];
        for (int i = 0; i < filas; i++) {
            for (int j = 0; j < 5; j++) {
                if (model.getValueAt(i, j) != null) {
                    String om = model.getValueAt(i, j).toString();
                    if (om.trim().length() != 0) {
                        infoTablaFactura[i][j] = om;
                    }
                }
            }
        }
        return infoTablaFactura;
    }


    private void clearAll() {
        
        VentanaDeInicio mVentana = VentanaDeInicio.getInstance();
        JPanel_CrearEntradaSalidaMercaderia panelCreaEntradaSalida = new JPanel_CrearEntradaSalidaMercaderia();
        mVentana.add(panelCreaEntradaSalida);
        panelCreaEntradaSalida.setSize(this.getSize());
        panelCreaEntradaSalida.setLocation(this.getLocation());
        mVentana.remove(this);
        panelCreaEntradaSalida.setVisible(true);
        if(mVentana.getTitle().equals("Salida de Mercaderia")){
            panelCreaEntradaSalida.jLabel_tipoMovimiento.setText("Salida de:");
        }
        mVentana.revalidate();
        mVentana.repaint();
        Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
        String factura = Integer.toString(AdminBD.ObtenerUltimoidMovimiento() + 1);
        panelCreaEntradaSalida.jLabel_NumerodeMovimiento.setText(factura);
        panelCreaEntradaSalida.personalizarTablaMovimiento();
        panelCreaEntradaSalida.agregarListenerRenders();
        panelCreaEntradaSalida.cargarSeleccionadorProductos();
    
    }
 

    private void cargarMovimiento(String direccion) {
        Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
        ReadExcel excel = new ReadExcel();
        String[] columnNames = {"Cod. Articulo", "Articulo",
            "Cantidad", "Precio.Unit",
            "Sub-Total"};
        List<Object[]> data = new ArrayList<Object[]>();
        //Agrega el modelo a la factura
        MyTableModel_FACT model = new MyTableModel_FACT(columnNames, data);
        this.jTable_Movimiento.setModel(model);
        this.agregarListenerRenders();
        String[][] inventario = excel.leerArchivoExcel(new File(direccion));
        int numFilas = inventario.length;
        for (int row = 0; row < numFilas; row++) {
            try {
                String idProducto = inventario[row][0];
                if (idProducto.equals("")) {
                    continue;
                }
                model.addRow(1);
                int cantidad;
                if (inventario[row][2].equals("")) {
                    cantidad = 0;
                } else {
                    cantidad = Integer.parseInt(inventario[row][2]);
                }
                BigDecimal precio;
                if (inventario[row][3].equals("")) {
                    precio = BigDecimal.ZERO;
                } else {
                    precio = this.StringtoBigDecimal(inventario[row][3]);
                }
                if (AdminBD.verSiExisteCod(idProducto)) {
                    model.setValueAt(idProducto, row, 0);
                    model.setValueAt(cantidad, row, 2);
                    model.setValueAt(precio, row, 3);
                    AdminBD.actualizarPrecioProducto(idProducto, precio);

                } else {
                    DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
                    Date date = new Date();
                    String fecha = dateFormat.format(date);
                    String nombre = inventario[row][1];
                    BigDecimal costo;
                    if (inventario[row][4].equals("")) {
                        costo = BigDecimal.ZERO;
                    } else {
                        costo = this.StringtoBigDecimal(inventario[row][4]);
                    }
                    String categoria = inventario[row][5];
                    if (categoria.equals("")) {
                        categoria = "General";
                    }
                    int idCategoria = AdminBD.consultarIdCategoriaXNombre(categoria);
                    AdminBD.crearProducto(idProducto, nombre, precio, costo.intValue(), fecha, "A", "", idCategoria);
                    model.setValueAt(idProducto, row, 0);
                    model.setValueAt(cantidad, row, 2);

                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(
                            null,
                            "Debe de ingresar un archivo de excel con un formato adecuado "
                                    + "\nque tenga las columnas especificas de una entrada de mercaderia",
                            "Alert!", JOptionPane.ERROR_MESSAGE);
                this.limpiarProductos();
                this.clearAll();
                return;
            }
        }
        model.addRow(20);
        //Vuelve a cargar la informacion para el editor de la primer columna
        this.cargarSeleccionadorProductos();
    }

    private void limpiarProductos() {
        Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
        AdminBD.eliminarProductosQueNoTienenInventario();
    }



}
