/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package joe;

import db_managment.Direct_Control_BD;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.math.BigDecimal;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.print.PrintService;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import jzebra.PrintRaw;
import jzebra.PrintServiceMatcher;

/**
 *
 * @author Oscar Montes
 */
public class JPanel_CrearFactura extends javax.swing.JPanel {

    /**
     * Creates new form NewJPanel
     */
    public JPanel_CrearFactura() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        jDialog_CrearProducto = new javax.swing.JDialog();
        jPanel2 = new javax.swing.JPanel();
        jTextField_codigo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField_nombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton_CrearProducto = new javax.swing.JButton();
        jButton_CancelarCrearProducto = new javax.swing.JButton();
        jFormattedTextField_precioProducto = new javax.swing.JFormattedTextField();
        jFormattedTextField_cantidadProducto = new javax.swing.JFormattedTextField();
        jDialog_VerProducto = new javax.swing.JDialog();
        jLayeredPane_VerProducto = new javax.swing.JLayeredPane();
        jLabel_Producto = new javax.swing.JLabel();
        jLabel_Nombre = new javax.swing.JLabel();
        jLabel_Cantidad = new javax.swing.JLabel();
        jLabel_PrecioUnitario = new javax.swing.JLabel();
        jLabel_datoFact = new javax.swing.JLabel();
        jLabel_datoNomb = new javax.swing.JLabel();
        jLabel_datoCant = new javax.swing.JLabel();
        jLabel_datoPrecio = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel_Descripcion = new javax.swing.JLabel();
        jDialog_BuscarProductoPorCod = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jButton_BusqueProducto = new javax.swing.JButton();
        jButton_CancelaBusquedaProducto = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jTextField_busqueProducto = new javax.swing.JTextField();
        jLabel_CodNoEncontrado = new javax.swing.JLabel();
        jDialog_DescuentoUnitario = new javax.swing.JDialog();
        jPanel3 = new javax.swing.JPanel();
        jLabel_DescripcionDescUnitario = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jButton_IngresarDescuento = new javax.swing.JButton();
        jButton_CancelarDescuentoUnitario = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jFormattedTextField_PrecioRegular = new javax.swing.JFormattedTextField();
        jFormattedTextField_descUnitario = new javax.swing.JFormattedTextField();
        jFormattedTextField_RebajaDelDesc = new javax.swing.JFormattedTextField();
        jFormattedTextField_PrecioConDesc = new javax.swing.JFormattedTextField();
        jDialog_CrearCliente = new javax.swing.JDialog();
        jPanel4 = new javax.swing.JPanel();
        jLabel_nombreCliente = new javax.swing.JLabel();
        jLabel_telefonoCliente = new javax.swing.JLabel();
        jLabel_direccionCliente = new javax.swing.JLabel();
        jLabel_FechaCumpleanos = new javax.swing.JLabel();
        jFormattedTextField_nombreCliente = new javax.swing.JFormattedTextField();
        jFormattedTextField_telefono = new javax.swing.JFormattedTextField();
        jFormattedTextField_direccionCliente = new javax.swing.JFormattedTextField();
        jFormattedTextField_fechaCumple = new javax.swing.JFormattedTextField();
        jButton_CrearCliente = new javax.swing.JButton();
        jButton_CancelarCrearCliente = new javax.swing.JButton();
        jButton_CreaProducto = new javax.swing.JButton();
        jButton_VerProducto = new javax.swing.JButton();
        jButton_EliminaFila = new javax.swing.JButton();
        jButton_Descuento = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_Factura = new javax.swing.JTable();
        jButton_RegresarFact = new javax.swing.JButton();
        jButton_aceptarFactura = new javax.swing.JButton();
        jLabel_NumFacTitle = new javax.swing.JLabel();
        jLabel_FechaFact = new javax.swing.JLabel();
        jFormattedTextField_SubTotal = new javax.swing.JFormattedTextField();
        jLabel_Fecha = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jFormattedTextField_desc = new javax.swing.JFormattedTextField();
        jLabel8 = new javax.swing.JLabel();
        jComboBox_CategoriaTipoPago = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        jTextField_Detalle = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jFormattedTextField_DescuentoTotal = new javax.swing.JFormattedTextField();
        jFormattedTextField_Total = new javax.swing.JFormattedTextField();
        jButton_BuscarProducto = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jComboBox_Vendedores = new javax.swing.JComboBox();
        jFormattedTextField_Cliente = new javax.swing.JFormattedTextField();
        jButton1 = new javax.swing.JButton();
        jLabel_NumerodeFact = new javax.swing.JLabel();
        jButton_guardaImprime = new javax.swing.JButton();

        jPanel2.setBackground(new java.awt.Color(153, 153, 153));

        jTextField_codigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField_codigoKeyPressed(evt);
            }
        });

        jLabel1.setText("Codigo del Producto");

        jLabel2.setText("Nombre del Producto");

        jTextField_nombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField_nombreKeyPressed(evt);
            }
        });

        jLabel3.setText("Precio del Producto");

        jLabel4.setText("Cantidad del Producto");

        jButton_CrearProducto.setText("Aceptar");
        jButton_CrearProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CrearProductoActionPerformed(evt);
            }
        });
        jButton_CrearProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton_CrearProductoKeyPressed(evt);
            }
        });

        jButton_CancelarCrearProducto.setText("Cancelar");
        jButton_CancelarCrearProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CancelarCrearProductoActionPerformed(evt);
            }
        });
        jButton_CancelarCrearProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton_CancelarCrearProductoKeyPressed(evt);
            }
        });

        jFormattedTextField_precioProducto.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        jFormattedTextField_precioProducto.setText("0.00");
        jFormattedTextField_precioProducto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jFormattedTextField_precioProductoFocusGained(evt);
            }
        });
        jFormattedTextField_precioProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jFormattedTextField_precioProductoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jFormattedTextField_precioProductoKeyTyped(evt);
            }
        });

        jFormattedTextField_cantidadProducto.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        jFormattedTextField_cantidadProducto.setText("0");
        jFormattedTextField_cantidadProducto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jFormattedTextField_cantidadProductoFocusGained(evt);
            }
        });
        jFormattedTextField_cantidadProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jFormattedTextField_cantidadProductoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jFormattedTextField_cantidadProductoKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton_CrearProducto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton_CancelarCrearProducto)
                .addGap(27, 27, 27))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jFormattedTextField_precioProducto, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField_codigo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                    .addComponent(jTextField_nombre, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jFormattedTextField_cantidadProducto))
                .addGap(75, 75, 75))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_codigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jFormattedTextField_precioProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jFormattedTextField_cantidadProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_CrearProducto)
                    .addComponent(jButton_CancelarCrearProducto))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jDialog_CrearProductoLayout = new javax.swing.GroupLayout(jDialog_CrearProducto.getContentPane());
        jDialog_CrearProducto.getContentPane().setLayout(jDialog_CrearProductoLayout);
        jDialog_CrearProductoLayout.setHorizontalGroup(
            jDialog_CrearProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jDialog_CrearProductoLayout.setVerticalGroup(
            jDialog_CrearProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jDialog_VerProducto.setMinimumSize(new java.awt.Dimension(483, 310));
        jDialog_VerProducto.setModal(true);

        jLayeredPane_VerProducto.setBackground(java.awt.Color.white);
        jLayeredPane_VerProducto.setMaximumSize(new java.awt.Dimension(473, 303));
        jLayeredPane_VerProducto.setMinimumSize(new java.awt.Dimension(473, 303));

        jLabel_Producto.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel_Producto.setForeground(new java.awt.Color(0, 51, 51));
        jLabel_Producto.setText("Producto");

        jLabel_Nombre.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel_Nombre.setForeground(new java.awt.Color(0, 51, 51));
        jLabel_Nombre.setText("Nombre");

        jLabel_Cantidad.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel_Cantidad.setForeground(new java.awt.Color(0, 51, 51));
        jLabel_Cantidad.setText("Cantidad");

        jLabel_PrecioUnitario.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel_PrecioUnitario.setForeground(new java.awt.Color(0, 51, 51));
        jLabel_PrecioUnitario.setText("Precio Unitario");

        jLabel_datoFact.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel_datoFact.setForeground(new java.awt.Color(0, 51, 51));

        jLabel_datoNomb.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel_datoNomb.setForeground(new java.awt.Color(0, 51, 51));

        jLabel_datoCant.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel_datoCant.setForeground(new java.awt.Color(0, 51, 51));

        jLabel_datoPrecio.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel_datoPrecio.setForeground(new java.awt.Color(0, 51, 51));

        jButton2.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 51, 51));
        jButton2.setText("Aceptar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton2KeyPressed(evt);
            }
        });

        jLabel_Descripcion.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel_Descripcion.setForeground(new java.awt.Color(0, 51, 51));
        jLabel_Descripcion.setText("Descripcion");

        javax.swing.GroupLayout jLayeredPane_VerProductoLayout = new javax.swing.GroupLayout(jLayeredPane_VerProducto);
        jLayeredPane_VerProducto.setLayout(jLayeredPane_VerProductoLayout);
        jLayeredPane_VerProductoLayout.setHorizontalGroup(
            jLayeredPane_VerProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane_VerProductoLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jLayeredPane_VerProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jLayeredPane_VerProductoLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel_Cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel_datoCant, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(74, 74, 74))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jLayeredPane_VerProductoLayout.createSequentialGroup()
                        .addComponent(jLabel_Nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel_datoNomb, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jLayeredPane_VerProductoLayout.createSequentialGroup()
                .addGroup(jLayeredPane_VerProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane_VerProductoLayout.createSequentialGroup()
                        .addGap(207, 207, 207)
                        .addComponent(jLabel_Producto))
                    .addGroup(jLayeredPane_VerProductoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel_datoFact, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jLayeredPane_VerProductoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane_VerProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel_Descripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jLayeredPane_VerProductoLayout.createSequentialGroup()
                        .addComponent(jLabel_PrecioUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel_datoPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane_VerProductoLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(98, 98, 98))
        );
        jLayeredPane_VerProductoLayout.setVerticalGroup(
            jLayeredPane_VerProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane_VerProductoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane_VerProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jLayeredPane_VerProductoLayout.createSequentialGroup()
                        .addComponent(jLabel_Producto, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addGroup(jLayeredPane_VerProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jLayeredPane_VerProductoLayout.createSequentialGroup()
                                .addComponent(jLabel_datoFact, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(11, 11, 11)
                                .addComponent(jLabel_datoNomb, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel_Nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(jLayeredPane_VerProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel_Cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_datoCant, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel_PrecioUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel_datoPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel_Descripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );
        jLayeredPane_VerProducto.setLayer(jLabel_Producto, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane_VerProducto.setLayer(jLabel_Nombre, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane_VerProducto.setLayer(jLabel_Cantidad, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane_VerProducto.setLayer(jLabel_PrecioUnitario, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane_VerProducto.setLayer(jLabel_datoFact, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane_VerProducto.setLayer(jLabel_datoNomb, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane_VerProducto.setLayer(jLabel_datoCant, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane_VerProducto.setLayer(jLabel_datoPrecio, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane_VerProducto.setLayer(jButton2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane_VerProducto.setLayer(jLabel_Descripcion, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDialog_VerProductoLayout = new javax.swing.GroupLayout(jDialog_VerProducto.getContentPane());
        jDialog_VerProducto.getContentPane().setLayout(jDialog_VerProductoLayout);
        jDialog_VerProductoLayout.setHorizontalGroup(
            jDialog_VerProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane_VerProducto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDialog_VerProductoLayout.setVerticalGroup(
            jDialog_VerProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane_VerProducto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jButton_BusqueProducto.setText("Aceptar");
        jButton_BusqueProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_BusqueProductoActionPerformed(evt);
            }
        });
        jButton_BusqueProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton_BusqueProductoKeyPressed(evt);
            }
        });

        jButton_CancelaBusquedaProducto.setText("Cancelar");
        jButton_CancelaBusquedaProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CancelaBusquedaProductoActionPerformed(evt);
            }
        });

        jLabel5.setText("Ingrese el Cod");

        jTextField_busqueProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField_busqueProductoKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton_BusqueProducto)
                        .addGap(42, 42, 42)
                        .addComponent(jButton_CancelaBusquedaProducto))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel_CodNoEncontrado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField_busqueProducto, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE))))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(81, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextField_busqueProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel_CodNoEncontrado, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_BusqueProducto)
                    .addComponent(jButton_CancelaBusquedaProducto))
                .addGap(52, 52, 52))
        );

        javax.swing.GroupLayout jDialog_BuscarProductoPorCodLayout = new javax.swing.GroupLayout(jDialog_BuscarProductoPorCod.getContentPane());
        jDialog_BuscarProductoPorCod.getContentPane().setLayout(jDialog_BuscarProductoPorCodLayout);
        jDialog_BuscarProductoPorCodLayout.setHorizontalGroup(
            jDialog_BuscarProductoPorCodLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jDialog_BuscarProductoPorCodLayout.setVerticalGroup(
            jDialog_BuscarProductoPorCodLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jDialog_DescuentoUnitario.setMinimumSize(new java.awt.Dimension(440, 235));

        jPanel3.setBackground(new java.awt.Color(153, 153, 153));
        jPanel3.setPreferredSize(new java.awt.Dimension(429, 201));

        jLabel_DescripcionDescUnitario.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_DescripcionDescUnitario.setText("Descripcion");

        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Precio Regular");

        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Desc en %");

        jButton_IngresarDescuento.setText("Aceptar");
        jButton_IngresarDescuento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_IngresarDescuentoActionPerformed(evt);
            }
        });

        jButton_CancelarDescuentoUnitario.setText("Cancelar");
        jButton_CancelarDescuentoUnitario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CancelarDescuentoUnitarioActionPerformed(evt);
            }
        });

        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Precio con Desc");

        jFormattedTextField_PrecioRegular.setEditable(false);
        jFormattedTextField_PrecioRegular.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("C#,##0.00;(C#,##0.00)"))));
        jFormattedTextField_PrecioRegular.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jFormattedTextField_PrecioRegular.setText("0.00");
        jFormattedTextField_PrecioRegular.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jFormattedTextField_PrecioRegularPropertyChange(evt);
            }
        });

        jFormattedTextField_descUnitario.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        jFormattedTextField_descUnitario.setText("0.00");
        jFormattedTextField_descUnitario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jFormattedTextField_descUnitarioMouseClicked(evt);
            }
        });
        jFormattedTextField_descUnitario.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jFormattedTextField_descUnitarioPropertyChange(evt);
            }
        });
        jFormattedTextField_descUnitario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jFormattedTextField_descUnitarioKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jFormattedTextField_descUnitarioKeyTyped(evt);
            }
        });

        jFormattedTextField_RebajaDelDesc.setEditable(false);
        jFormattedTextField_RebajaDelDesc.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("C#,##0.00;(C#,##0.00)"))));
        jFormattedTextField_RebajaDelDesc.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jFormattedTextField_RebajaDelDesc.setText("0.00");

        jFormattedTextField_PrecioConDesc.setEditable(false);
        jFormattedTextField_PrecioConDesc.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("C#,##0.00;(C#,##0.00)"))));
        jFormattedTextField_PrecioConDesc.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jFormattedTextField_PrecioConDesc.setText("0.00");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(jButton_IngresarDescuento))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(jFormattedTextField_descUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel_DescripcionDescUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 5, Short.MAX_VALUE)))))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jFormattedTextField_PrecioRegular)
                    .addComponent(jButton_CancelarDescuentoUnitario)
                    .addComponent(jFormattedTextField_RebajaDelDesc, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
                    .addComponent(jFormattedTextField_PrecioConDesc))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel_DescripcionDescUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFormattedTextField_PrecioRegular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFormattedTextField_descUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFormattedTextField_RebajaDelDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFormattedTextField_PrecioConDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_IngresarDescuento)
                    .addComponent(jButton_CancelarDescuentoUnitario))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jDialog_DescuentoUnitarioLayout = new javax.swing.GroupLayout(jDialog_DescuentoUnitario.getContentPane());
        jDialog_DescuentoUnitario.getContentPane().setLayout(jDialog_DescuentoUnitarioLayout);
        jDialog_DescuentoUnitarioLayout.setHorizontalGroup(
            jDialog_DescuentoUnitarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jDialog_DescuentoUnitarioLayout.setVerticalGroup(
            jDialog_DescuentoUnitarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jDialog_CrearCliente.setMinimumSize(new java.awt.Dimension(480, 280));
        jDialog_CrearCliente.setModal(true);

        jPanel4.setBackground(new java.awt.Color(153, 153, 153));

        jLabel_nombreCliente.setText("Nombre del Cliente");

        jLabel_telefonoCliente.setText("Telefono");

        jLabel_direccionCliente.setText("Direccion");

        jLabel_FechaCumpleanos.setText("Fecha de Cumpleanos");

        jFormattedTextField_nombreCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jFormattedTextField_nombreClienteKeyPressed(evt);
            }
        });

        jFormattedTextField_telefono.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.SHORT))));
        jFormattedTextField_telefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jFormattedTextField_telefonoKeyPressed(evt);
            }
        });

        jFormattedTextField_direccionCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jFormattedTextField_direccionClienteKeyPressed(evt);
            }
        });

        jFormattedTextField_fechaCumple.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jFormattedTextField_fechaCumpleKeyPressed(evt);
            }
        });

        jButton_CrearCliente.setText("Aceptar");
        jButton_CrearCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CrearClienteActionPerformed(evt);
            }
        });
        jButton_CrearCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton_CrearClienteKeyPressed(evt);
            }
        });

        jButton_CancelarCrearCliente.setText("Cancelar");
        jButton_CancelarCrearCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CancelarCrearClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel_telefonoCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel_nombreCliente)
                    .addComponent(jLabel_direccionCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel_FechaCumpleanos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(32, 32, 32)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jFormattedTextField_nombreCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                    .addComponent(jFormattedTextField_telefono)
                    .addComponent(jFormattedTextField_direccionCliente)
                    .addComponent(jFormattedTextField_fechaCumple))
                .addContainerGap(47, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton_CrearCliente)
                .addGap(18, 18, 18)
                .addComponent(jButton_CancelarCrearCliente)
                .addGap(33, 33, 33))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_nombreCliente)
                    .addComponent(jFormattedTextField_nombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_telefonoCliente)
                    .addComponent(jFormattedTextField_telefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_direccionCliente)
                    .addComponent(jFormattedTextField_direccionCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_FechaCumpleanos)
                    .addComponent(jFormattedTextField_fechaCumple, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_CancelarCrearCliente)
                    .addComponent(jButton_CrearCliente))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jDialog_CrearClienteLayout = new javax.swing.GroupLayout(jDialog_CrearCliente.getContentPane());
        jDialog_CrearCliente.getContentPane().setLayout(jDialog_CrearClienteLayout);
        jDialog_CrearClienteLayout.setHorizontalGroup(
            jDialog_CrearClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jDialog_CrearClienteLayout.setVerticalGroup(
            jDialog_CrearClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jButton_CreaProducto.setText("Crear Producto");
        jButton_CreaProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CreaProductoActionPerformed(evt);
            }
        });

        jButton_VerProducto.setText("Ver Producto");
        jButton_VerProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_VerProductoActionPerformed(evt);
            }
        });

        jButton_EliminaFila.setText("Eliminar Fila");
        jButton_EliminaFila.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_EliminaFilaActionPerformed(evt);
            }
        });

        jButton_Descuento.setText("Descuento");
        jButton_Descuento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_DescuentoActionPerformed(evt);
            }
        });

        jTable_Factura.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTable_Factura.setCellSelectionEnabled(true);
        jTable_Factura.setFillsViewportHeight(true);
        jTable_Factura.setSurrendersFocusOnKeystroke(true);
        jTable_Factura.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable_FacturaKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(jTable_Factura);

        jButton_RegresarFact.setText("Regresar");
        jButton_RegresarFact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_RegresarFactActionPerformed(evt);
            }
        });

        jButton_aceptarFactura.setText("Guardar");
        jButton_aceptarFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_aceptarFacturaActionPerformed(evt);
            }
        });

        jLabel_NumFacTitle.setText("Numero Fact");

        jLabel_FechaFact.setText("Fecha");

        jFormattedTextField_SubTotal.setEditable(false);
        jFormattedTextField_SubTotal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("C#,##0.00;(C#,##0.00)"))));
        jFormattedTextField_SubTotal.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jFormattedTextField_SubTotal.setText("0.00");
        jFormattedTextField_SubTotal.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jFormattedTextField_SubTotalPropertyChange(evt);
            }
        });

        jLabel_Fecha.setText("Aqui va la fecha");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("SubTotal");

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Desc.");

        jFormattedTextField_desc.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        jFormattedTextField_desc.setText("0.00");
        jFormattedTextField_desc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jFormattedTextField_descMouseClicked(evt);
            }
        });
        jFormattedTextField_desc.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jFormattedTextField_descPropertyChange(evt);
            }
        });
        jFormattedTextField_desc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jFormattedTextField_descKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jFormattedTextField_descKeyTyped(evt);
            }
        });

        jLabel8.setText("%");

        jComboBox_CategoriaTipoPago.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Efectivo", "Tarjeta" }));

        jLabel10.setText("Tipo de Pago");

        jLabel11.setText("Detalle de Factura:");

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Total");

        jFormattedTextField_DescuentoTotal.setEditable(false);
        jFormattedTextField_DescuentoTotal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("C#,##0.00;(C#,##0.00)"))));
        jFormattedTextField_DescuentoTotal.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jFormattedTextField_DescuentoTotal.setText("0.00");

        jFormattedTextField_Total.setEditable(false);
        jFormattedTextField_Total.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("C#,##0.00;(C#,##0.00)"))));
        jFormattedTextField_Total.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jFormattedTextField_Total.setText("0.00");

        jButton_BuscarProducto.setText("Buscar Producto");
        jButton_BuscarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_BuscarProductoActionPerformed(evt);
            }
        });

        jLabel9.setText("Vendedor");

        jLabel16.setText("Cliente");

        jComboBox_Vendedores.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox_Vendedores.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jComboBox_VendedoresKeyTyped(evt);
            }
        });

        jFormattedTextField_Cliente.setText("Cliente Anonimo");
        jFormattedTextField_Cliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jFormattedTextField_ClienteMouseClicked(evt);
            }
        });
        jFormattedTextField_Cliente.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jFormattedTextField_ClientePropertyChange(evt);
            }
        });
        jFormattedTextField_Cliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jFormattedTextField_ClienteKeyPressed(evt);
            }
        });

        jButton1.setText("Buscar");

        jLabel_NumerodeFact.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel_NumerodeFact.setForeground(new java.awt.Color(0, 51, 51));
        jLabel_NumerodeFact.setText("Num");

        jButton_guardaImprime.setText("Guarda e Imprimir");
        jButton_guardaImprime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_guardaImprimeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton_VerProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_CreaProducto)
                    .addComponent(jButton_EliminaFila, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_Descuento, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_BuscarProducto)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel_NumFacTitle)
                            .addComponent(jLabel_NumerodeFact))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField_Detalle, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton_guardaImprime, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                            .addComponent(jButton_RegresarFact, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton_aceptarFactura, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jFormattedTextField_desc, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel8))
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jFormattedTextField_Total, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
                                    .addComponent(jFormattedTextField_DescuentoTotal)
                                    .addComponent(jFormattedTextField_SubTotal)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox_CategoriaTipoPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox_Vendedores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17)
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFormattedTextField_Cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel_FechaFact, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel_Fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 726, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel_NumFacTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10)
                        .addComponent(jComboBox_CategoriaTipoPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9)
                        .addComponent(jComboBox_Vendedores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel16)
                        .addComponent(jFormattedTextField_Cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1)
                        .addComponent(jLabel_FechaFact, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel_Fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel_NumerodeFact)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton_CreaProducto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton_VerProducto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton_EliminaFila)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton_Descuento)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton_BuscarProducto)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_aceptarFactura)
                    .addComponent(jLabel11)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFormattedTextField_SubTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField_Detalle, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton_RegresarFact)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jFormattedTextField_desc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(jFormattedTextField_DescuentoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jFormattedTextField_Total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton_guardaImprime))))
                .addGap(36, 36, 36))
        );
    }//GEN-END:initComponents
    private void creacionProductoPanel(){
         //En caso de que quiera crear un producto mientras se este editando
        if (jTable_Factura.isEditing()) {
            jTable_Factura.getCellEditor().cancelCellEditing();
            this.jDialog_CrearProducto.setSize(500,300);
            this.jDialog_CrearProducto.setVisible(true);
            return;
        }
        
        //Llama a la ventana para crear el producto
        this.jDialog_CrearProducto.setSize(500,300);
        this.jDialog_CrearProducto.setVisible(true);
    
    }
    private void jButton_CreaProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CreaProductoActionPerformed
       this.creacionProductoPanel();
    }//GEN-LAST:event_jButton_CreaProductoActionPerformed
    /**
     * Este metodo permite mostrar toda la informacion del producto
     * @param idProducto 
     */
    private void verProducto(String idProducto){
            Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
            String articulo = AdminBD.verNombreProductoPorCodigo(idProducto);
            BigDecimal PrecioUnitario = AdminBD.verPrecio(idProducto);
            int cantidad= AdminBD.verCantidad(idProducto);
            jLabel_datoCant.setText(Integer.toString(cantidad));
            jLabel_datoFact.setText(jLabel_NumerodeFact.getText());
            jLabel_datoNomb.setText(articulo);
            jLabel_datoPrecio.setText(PrecioUnitario.toString());
            String detalle= AdminBD.verDetalle(idProducto);
            //Si en la base el detalle es null
            if (detalle==null) {
                jLabel_Descripcion.setText("Descripcion  " + "Este producto"
                        + " no tiene ningun detalle");
                jDialog_VerProducto.setVisible(true);
                return;
            }
            jLabel_Descripcion.setText("Descripcion  " + detalle);
            jDialog_VerProducto.setVisible(true);
       
        }
    
    
    private void jButton_VerProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_VerProductoActionPerformed
        if (jTable_Factura.isEditing()) {
            jTable_Factura.getCellEditor().cancelCellEditing();
            
        }
        MyTableModel_FACT model = (MyTableModel_FACT) jTable_Factura.getModel();
        int row = jTable_Factura.getSelectedRow();
        String idProducto = model.getValueAt(row, 0).toString();//obtiene el id
        //del producto seleccionado para VerProducto
        if (!"".equals(idProducto)) {//verifica que se quiere ver un producto
            this.verProducto(idProducto);
        }
        // Si no selecciono un producto entonces que busque el producto por cod
        else{
            jDialog_BuscarProductoPorCod.setSize(295,243);
            jDialog_BuscarProductoPorCod.setVisible(true);
        }
    }//GEN-LAST:event_jButton_VerProductoActionPerformed
    /**
     * Este metodo es para poder eliminar una fila de la tabla de crear factura
     */
    private void eliminarFila(){
        MyTableModel_FACT model = (MyTableModel_FACT) jTable_Factura.getModel();
        int row = jTable_Factura.getSelectedRow();
        ///Si se esta escribiendo en la celda para el editor y luego elimina la
        // fila
        if (jTable_Factura.isEditing()) {
            jTable_Factura.getCellEditor().cancelCellEditing();
            jTable_Factura.revalidate();
            jTable_Factura.repaint();
            jTable_Factura.requestFocus();
            
        }
        String subTotal = model.getValueAt(row, 4).toString();
        if (subTotal != "") {
            //Elimina un producto ya ingresado y actualiza el total
            BigDecimal subtotal = new BigDecimal(subTotal);
            model.removeRow(row);
            BigDecimal totalFact= this.corregirDato(
                    this.jFormattedTextField_SubTotal.getText());
            this.jFormattedTextField_SubTotal.setValue(
                    totalFact.subtract(subtotal));
            jTable_Factura.revalidate();
            jTable_Factura.repaint();
            jTable_Factura.requestFocus();
        } else { //Si es vacio el subtotal significa que no tiene que actualizar
            // el subtotal
            model.removeRow(row);
            jTable_Factura.revalidate();
            jTable_Factura.repaint();
            jTable_Factura.requestFocus();

        }
    }
    private void jButton_EliminaFilaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_EliminaFilaActionPerformed
        this.eliminarFila();
    }//GEN-LAST:event_jButton_EliminaFilaActionPerformed
    /**
     * Este metodo permite que se actualice el campo del total y la rebaja
     * cuando se inserta un descuento unitario en la tabla Factura.
     * @param evt 
     */
    private void jButton_DescuentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_DescuentoActionPerformed
        if (jTable_Factura.isEditing()) {
            jTable_Factura.getCellEditor().cancelCellEditing();
            
        }
        MyTableModel_FACT model = (MyTableModel_FACT) jTable_Factura.getModel();
        int row = jTable_Factura.getSelectedRow();
        String idProducto = model.getValueAt(row, 0).toString();
        //obtiene el id del 
        //producto seleccionado para VerProducto
        String precioSinCorregir = model.getValueAt(row, 3).toString();
        if (!"".equals(idProducto)) {//verifica que se quiere ver un producto
            BigDecimal PrecioCorregido = this.corregirDato(precioSinCorregir);
            this.aplicarDescAlProducto(idProducto, PrecioCorregido);
        } else {
            System.out.println("Porfavor Seleccione un producto");
        }
    }//GEN-LAST:event_jButton_DescuentoActionPerformed

    private void jTable_FacturaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable_FacturaKeyPressed
        int tecla=evt.getKeyCode();
        if(tecla==KeyEvent.VK_F9){
            this.eliminarFila();
            }
   
    }//GEN-LAST:event_jTable_FacturaKeyPressed
    private void jButton_RegresarFactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_RegresarFactActionPerformed
        this.regresar();

    }//GEN-LAST:event_jButton_RegresarFactActionPerformed
    private void regresar(){
        VentanaDeInicio miVentana= VentanaDeInicio.getInstance();
        JPanel_Facturacion panelFact= new JPanel_Facturacion();
        panelFact.setSize(this.getSize());
        panelFact.setLocation(this.getLocation());
        miVentana.remove(this);
        miVentana.add(panelFact);
        miVentana.setTitle("Facturacion");
        panelFact.setVisible(true);
        panelFact.completarTablaFacturacion();
        miVentana.revalidate();
        miVentana.repaint();
    }
    /**
     * Este metodo permite que vuelva a la tabla y seleciones la fila donde
     * quedo o la siguiente en la tabla facturacion
     * @param cantidad 
     */
    private void setFocusTablaFact(int cantidad){
        jTable_Factura.revalidate();
        jTable_Factura.repaint();
        jTable_Factura.changeSelection(jTable_Factura.getSelectedRow()
                + cantidad, jTable_Factura.getSelectedColumn(), false, false);
        jTable_Factura.requestFocus();
    }
    /**
     * Este metodo crea un producto en factura
     */
    private void CrearProducto(){
        Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
        DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
        Date date = new Date();
        String codigo = this.jTextField_codigo.getText();
        boolean existeProducto = AdminBD.verSiExisteCod(codigo);
        if (!existeProducto) {
            BigDecimal bd = new BigDecimal(
                    this.jFormattedTextField_precioProducto.
                            getValue().toString());
            AdminBD.crearProducto(codigo,this.jTextField_nombre.getText(),
                    bd,0,dateFormat.format(date),"A", null, 1);
            AdminBD.insertarEnInventario(this.jTextField_codigo.getText(),
                    1, Integer.parseInt(this.
                            jFormattedTextField_cantidadProducto.getValue()
                            .toString()));
            this.clearCrearProducto();
            this.jDialog_CrearProducto.dispose();
            MyTableModel_FACT model = (MyTableModel_FACT) 
                    jTable_Factura.getModel();
            model.setValueAt(codigo, jTable_Factura.getSelectedRow(), 0);
            //Vuelve a cargar la informacion para el editor de la primer columna
            this.cargarSeleccionadorProductos();
            this.setFocusTablaFact(1);
        }

        else {
            JOptionPane.showMessageDialog(
                          null,
                          "ESTE Cod ya existe en el inventario",
                          "Alert!", JOptionPane.ERROR_MESSAGE);
            this.jTextField_codigo.setText("");
            this.jButton_CrearProducto.transferFocus();
            this.jButton_CancelarCrearProducto.transferFocus();
        }
    }

    private void jButton_CrearProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CrearProductoActionPerformed
       this.CrearProducto();
       this.clearCrearProducto();

    }//GEN-LAST:event_jButton_CrearProductoActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.setFocusTablaFact(0);
        this.jDialog_VerProducto.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed
    private void clearCrearProducto(){
        this.jTextField_codigo.setText("");
        this.jTextField_nombre.setText("");
        this.jFormattedTextField_cantidadProducto.setText("0");
        this.jFormattedTextField_precioProducto.setText("0.00");
       
    }
    private void jButton_CancelarCrearProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CancelarCrearProductoActionPerformed
        this.clearCrearProducto();
        this.jDialog_CrearProducto.dispose();
        //Para que el usuario se mantenga en la tabla
        this.setFocusTablaFact(0);
    }//GEN-LAST:event_jButton_CancelarCrearProductoActionPerformed

    private void jTextField_codigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_codigoKeyPressed
        //Se presiono enter en el textfield de codigo por lo tanto tiene que
        // hacer que se haga focus el que sigue
        if(evt.getKeyCode()==10){
            this.jTextField_codigo.transferFocus();           
        
        }
    }//GEN-LAST:event_jTextField_codigoKeyPressed
    private void jTextField_nombreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_nombreKeyPressed
        if(evt.getKeyCode()==10){
            this.jTextField_nombre.transferFocus();
        }
    }//GEN-LAST:event_jTextField_nombreKeyPressed

    private void jButton_CrearProductoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton_CrearProductoKeyPressed
        if(evt.getKeyCode()==10){
            this.CrearProducto();
        }
    }//GEN-LAST:event_jButton_CrearProductoKeyPressed
    /**
     * Permite buscar el producto cuando el usuario presiona el boton buscar
     * producto en crear factura
     */
    private void buscarProducto(){
        Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
        String idProducto = this.jTextField_busqueProducto.getText();
        boolean existeProducto=AdminBD.verSiExisteCod(idProducto);        
        if(existeProducto){
            this.jDialog_BuscarProductoPorCod.dispose();
            this.verProducto(idProducto);
            this.jTextField_busqueProducto.setText("");
            this.jLabel_CodNoEncontrado.setText("");
            return;        
        }
        this.jLabel_CodNoEncontrado.setText("Cod. No Existe");
        this.jTextField_busqueProducto.setText("");
        this.jButton_BusqueProducto.transferFocus();
        this.jButton_CancelaBusquedaProducto.transferFocus();               
    }                          
    
    private void jButton_BusqueProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_BusqueProductoActionPerformed
        this.buscarProducto();
    }//GEN-LAST:event_jButton_BusqueProductoActionPerformed

    private void jButton_CancelaBusquedaProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CancelaBusquedaProductoActionPerformed
        this.jDialog_BuscarProductoPorCod.dispose();
        this.jLabel_CodNoEncontrado.setText("");
        this.setFocusTablaFact(0);        
    }//GEN-LAST:event_jButton_CancelaBusquedaProductoActionPerformed

    private void jTextField_busqueProductoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_busqueProductoKeyPressed
        if(evt.getKeyCode()==10){
            this.jTextField_busqueProducto.transferFocus();   
        
        }
    }//GEN-LAST:event_jTextField_busqueProductoKeyPressed

    private void jButton_BusqueProductoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton_BusqueProductoKeyPressed
        if(evt.getKeyCode()==10){
            this.buscarProducto();
        }
    }//GEN-LAST:event_jButton_BusqueProductoKeyPressed

    private void jButton2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton2KeyPressed
         if(evt.getKeyCode()==10){
             this.setFocusTablaFact(0);
             this.jDialog_VerProducto.dispose();
        }
       
    }//GEN-LAST:event_jButton2KeyPressed
    private void jFormattedTextField_precioProductoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextField_precioProductoKeyTyped
        int tecla= evt.getKeyChar();
        if(tecla==KeyEvent.VK_COMMA){
            return;
        }
        if(tecla==KeyEvent.VK_PERIOD){
            return;
        }
        if (!Character.isDigit(tecla) & !Character.isISOControl(evt.getKeyChar())) {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();

        }
    
    }//GEN-LAST:event_jFormattedTextField_precioProductoKeyTyped
    private void jFormattedTextField_precioProductoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextField_precioProductoKeyPressed
         if(evt.getKeyCode()==10){
            this.jFormattedTextField_precioProducto.transferFocus();
              
        }
         if (evt.isControlDown()) {
            evt.consume();
        }
    }//GEN-LAST:event_jFormattedTextField_precioProductoKeyPressed

    private void jFormattedTextField_precioProductoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextField_precioProductoFocusGained
        this.jFormattedTextField_precioProducto.selectAll();
    }//GEN-LAST:event_jFormattedTextField_precioProductoFocusGained

    private void jFormattedTextField_cantidadProductoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextField_cantidadProductoFocusGained
        this.jFormattedTextField_cantidadProducto.selectAll();
    }//GEN-LAST:event_jFormattedTextField_cantidadProductoFocusGained

    private void jFormattedTextField_cantidadProductoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextField_cantidadProductoKeyPressed
        if(evt.getKeyCode()==10){
            this.jFormattedTextField_cantidadProducto.transferFocus();
            
        }
        if (evt.isControlDown()) {
            evt.consume();
        }
    }//GEN-LAST:event_jFormattedTextField_cantidadProductoKeyPressed

    private void jFormattedTextField_cantidadProductoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextField_cantidadProductoKeyTyped
       int tecla= evt.getKeyChar();
       if (!Character.isDigit(tecla) & !Character.isISOControl(evt.getKeyChar())) {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();

        }
    }//GEN-LAST:event_jFormattedTextField_cantidadProductoKeyTyped
    /**
     * Este metodo permite guardar los productos en la factura que se esta
     * creando.
     */
    private void guardarProductosFactura() {
        Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
        MyTableModel_FACT model = (MyTableModel_FACT) jTable_Factura.getModel();
        String[][] infoTablaFact = this.obtenerInfoTablaFact();
        int rows = infoTablaFact.length;
        int idFactura = Integer.parseInt(this.jLabel_NumerodeFact.getText());
        //Recorre la informacion de la tabla para obtener los datos para 
        //insertar los productos en la factura
        for (int i = 0; i < rows; i++) {
            //Si la fila esta vacia
            if (model.getValueAt(i, 0) != "") {
                String idProducto = infoTablaFact[i][0];
                int idVersion = AdminBD.veridVersionActivaProductoPorCodigo
        (idProducto);
                String CantidadSinCorregir = infoTablaFact[i][2].toString();
                DecimalFormat decimalfC = (DecimalFormat) 
                        NumberFormat.getInstance();
                decimalfC.setParseBigDecimal(true);
                BigDecimal cantidadB = null;
                try {
                    cantidadB = (BigDecimal) decimalfC.parseObject
        (CantidadSinCorregir);
                } catch (ParseException ex) {
                    Logger.getLogger(MyTableModelListener_FACT.class.
                            getName()).log(Level.SEVERE, null, ex);
                }
                int cantidad = cantidadB.intValue();
                String precioSinCorregir = infoTablaFact[i][3];
                BigDecimal PrecioVenta = this.corregirDato(precioSinCorregir);
                int idVersionFacturasProducto =AdminBD.verVersionDEFacturaActiva(idFactura);
                //System.out.println(idProducto+" "+idVersion+" "+cantidad+" "+idFactura+" "+PrecioVenta+" "+idVersionFacturasProducto);
                AdminBD.insertarProductoCantidadFact(idProducto, idVersion,
                        cantidad, idFactura, PrecioVenta,idVersionFacturasProducto);

            }
        }
    }
    
    private void jButton_aceptarFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_aceptarFacturaActionPerformed
        VentanaDeInicio mVentana= VentanaDeInicio.getInstance();
        if(mVentana.getTitle().equals("Modifica Factura")){
            this.devolverProductos();
            this.modificaFactura();
            this.guardarFactura();
            this.regresar();
            return;
            
        
        }
        this.guardarFactura();
        this.clearAll();
        
        
        
    }//GEN-LAST:event_jButton_aceptarFacturaActionPerformed
    /**
     * Este metodo capta si haya algun cambio en el subtotal para que corriga
     * el descuento si es que se aplico uno y el total en la factua.
     * @param evt 
     */
    private void jFormattedTextField_SubTotalPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jFormattedTextField_SubTotalPropertyChange
        if (evt.getPropertyName().equals("value")) {
            String text = evt.getNewValue().toString();
            DecimalFormat decimalf = (DecimalFormat) NumberFormat.getInstance();
            decimalf.setParseBigDecimal(true);
            BigDecimal subTotal = null;
            try {
                subTotal = (BigDecimal) decimalf.parseObject(text);
            } catch (ParseException ex) {
                Logger.getLogger(MyTableModelListener_FACT.class.getName())
                        .log(Level.SEVERE, null, ex);
            }
            this.jFormattedTextField_Total.setValue(subTotal);
            double descuentoAaplicar = Double.parseDouble(
                    this.jFormattedTextField_desc.getText());
            if (descuentoAaplicar <= 100 & descuentoAaplicar > 0) {
                double desc = descuentoAaplicar / 100;
                BigDecimal descuento = BigDecimal.valueOf(desc);
                BigDecimal nuevoSubTotal;
                BigDecimal rebaja = subTotal.multiply(descuento);
                nuevoSubTotal = subTotal.subtract(rebaja);
                this.jFormattedTextField_DescuentoTotal.setValue(rebaja);
                this.jFormattedTextField_Total.setValue(nuevoSubTotal);
            } else {
                return;

            }
        }
    }//GEN-LAST:event_jFormattedTextField_SubTotalPropertyChange
    private void jFormattedTextField_descPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jFormattedTextField_descPropertyChange
        if (evt.getPropertyName().equals("value")) {
            String text = this.jFormattedTextField_SubTotal.getText();
            BigDecimal subTotal = this.corregirDato(text);
            this.jFormattedTextField_Total.setValue(subTotal);
            double descuentoAaplicar = Double.parseDouble(
                    evt.getNewValue().toString());
            if (descuentoAaplicar <= 100 & descuentoAaplicar > 0) {
                double desc = descuentoAaplicar / 100;
                BigDecimal descuento = BigDecimal.valueOf(desc);
                BigDecimal nuevoSubTotal;
                BigDecimal rebaja = subTotal.multiply(descuento);
                nuevoSubTotal = subTotal.subtract(rebaja);
                this.jFormattedTextField_DescuentoTotal.setValue(rebaja);
                this.jFormattedTextField_Total.setValue(nuevoSubTotal);
            } else if (descuentoAaplicar == 0.0) {
                this.jFormattedTextField_DescuentoTotal.
                        setValue(descuentoAaplicar);
            } else {
                this.jFormattedTextField_desc.setValue(0.00);
                JOptionPane.showMessageDialog(
                          null,
                          "No se puede aplicar un descuento de "
                                  +descuentoAaplicar,
                          "Alert!", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jFormattedTextField_descPropertyChange

    private void jFormattedTextField_descKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextField_descKeyPressed
        if(evt.getKeyCode()==10){
             this.setFocusTablaFact(0);          
                   
        }
        if (evt.isControlDown()) {
            evt.consume();
        }
    }//GEN-LAST:event_jFormattedTextField_descKeyPressed

    private void jFormattedTextField_descKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextField_descKeyTyped
        int tecla= evt.getKeyChar();
        if(tecla==KeyEvent.VK_COMMA){
            evt.consume();
        }
        if(tecla==KeyEvent.VK_PERIOD){
            return;
        };
        if (!Character.isDigit(tecla) & !Character.isISOControl(
                evt.getKeyChar())) {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
        }

    }//GEN-LAST:event_jFormattedTextField_descKeyTyped
    /**
     * Este metodo permite activar el buscador para poder buscar un producto
     * y luego insertarlo en la tabla de crear Factura
     * @param evt 
     */
    private void jButton_BuscarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_BuscarProductoActionPerformed
        NewJDialog_Buscador buscador= new NewJDialog_Buscador();
        buscador.actualizaTablaParaInventario();
        String id= buscador.getIdProducto();
        MyTableModel_FACT model = (MyTableModel_FACT) jTable_Factura.getModel();
        int row=this.jTable_Factura.getSelectedRow();
        model.setValueAt(id,row,0);
        this.setFocusTablaFact(1);       
                
    }//GEN-LAST:event_jButton_BuscarProductoActionPerformed

    private void jButton_CancelarCrearProductoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton_CancelarCrearProductoKeyPressed
         if(evt.getKeyCode()==10){
            this.jButton_CancelarCrearProducto.doClick();
        }
    }//GEN-LAST:event_jButton_CancelarCrearProductoKeyPressed
    /**
     * Este metodo permite actualizar la rebaja del descuento y el total cuando
     * se crear un descuento unitario
     * @param evt 
     */
    private void jFormattedTextField_PrecioRegularPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jFormattedTextField_PrecioRegularPropertyChange
        if(evt.getPropertyName().equals("value")){
        String text = evt.getNewValue().toString();
        DecimalFormat decimalf = (DecimalFormat) NumberFormat.getInstance();
        decimalf.setParseBigDecimal(true);
        BigDecimal PrecioRegular = null;
                try {
                    PrecioRegular = (BigDecimal) decimalf.parseObject(text);
                } catch (ParseException ex) {
                    Logger.getLogger(
                            MyTableModelListener_FACT.class.
                                    getName()).log(Level.SEVERE, null, ex);
                }
                this.jFormattedTextField_PrecioConDesc.setValue(PrecioRegular);
                double descuentoAaplicar= Double.parseDouble(
                        this.jFormattedTextField_descUnitario.getText());
                if(descuentoAaplicar<=100 & descuentoAaplicar>0){
                    double desc= descuentoAaplicar/100;
                    BigDecimal descuento = BigDecimal.valueOf(desc);
                    BigDecimal PrecioNuevo;
                    BigDecimal rebaja=PrecioRegular.multiply(descuento);
                    PrecioNuevo = PrecioRegular.subtract(rebaja);
                    this.jFormattedTextField_RebajaDelDesc.setValue(rebaja);
                    this.jFormattedTextField_PrecioConDesc.setValue(PrecioNuevo);
                }
                else{
                    return;
                
                }
                
        }
            
    }//GEN-LAST:event_jFormattedTextField_PrecioRegularPropertyChange
    /***
     * Este metodo permite actualizar el valor del precio con descuento y la
     * rebaja que se le hace a un producto cuando se le aplica un descuento
     * unitario
     * @param evt 
     */
    private void jFormattedTextField_descUnitarioPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jFormattedTextField_descUnitarioPropertyChange
        if (evt.getPropertyName().equals("value")) {
            String text = this.jFormattedTextField_PrecioRegular.getText();
            BigDecimal PrecioSinDesc = this.corregirDato(text);
            this.jFormattedTextField_PrecioConDesc.setValue(PrecioSinDesc);
            double descuentoAaplicar = Double.parseDouble(
                    evt.getNewValue().toString());
            if (descuentoAaplicar <= 100 & descuentoAaplicar > 0) {
                double desc = descuentoAaplicar / 100;
                BigDecimal descuento = BigDecimal.valueOf(desc);
                BigDecimal PrecioNuevo;
                BigDecimal rebaja = PrecioSinDesc.multiply(descuento);
                PrecioNuevo = PrecioSinDesc.subtract(rebaja);
                this.jFormattedTextField_RebajaDelDesc.setValue(rebaja);
                this.jFormattedTextField_PrecioConDesc.setValue(PrecioNuevo);
            } else if (descuentoAaplicar == 0.0) {
                this.jFormattedTextField_RebajaDelDesc.setValue(
                        descuentoAaplicar);
            } else {
                this.jFormattedTextField_descUnitario.setValue(0.00);
                JOptionPane.showMessageDialog(
                          null,
                          "No se puede aplicar un descuento de "
                                  +descuentoAaplicar,
                          "Alert!", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jFormattedTextField_descUnitarioPropertyChange

    private void jFormattedTextField_descUnitarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextField_descUnitarioKeyPressed
        if(evt.getKeyCode()==10){
             this.jFormattedTextField_descUnitario.transferFocus();                   
        }
        if (evt.isControlDown()) {
            evt.consume();
        }
    }//GEN-LAST:event_jFormattedTextField_descUnitarioKeyPressed
    private void jFormattedTextField_descUnitarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextField_descUnitarioKeyTyped
        int tecla= evt.getKeyChar();
        if(tecla==KeyEvent.VK_COMMA){
            evt.consume();
        }
        if(tecla==KeyEvent.VK_PERIOD){
            return;
        };
        if (!Character.isDigit(tecla) & !Character.isISOControl(evt.getKeyChar())) {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_jFormattedTextField_descUnitarioKeyTyped
    private void clearDescuentoUnitario() {
        this.jFormattedTextField_descUnitario.setText("0.00");
        this.jFormattedTextField_RebajaDelDesc.setText("0.00");
        this.jFormattedTextField_PrecioConDesc.setText("0.00");
    }
    private void jButton_IngresarDescuentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_IngresarDescuentoActionPerformed
        this.clearDescuentoUnitario();
        MyTableModel_FACT model = (MyTableModel_FACT) jTable_Factura.getModel();
        int row =jTable_Factura.getSelectedRow();
        model.setValueAt(this.jFormattedTextField_PrecioConDesc.getValue(),row,3);
        this.setFocusTablaFact(1);
        this.jDialog_DescuentoUnitario.dispose();
        
    }//GEN-LAST:event_jButton_IngresarDescuentoActionPerformed
    private void jButton_CancelarDescuentoUnitarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CancelarDescuentoUnitarioActionPerformed
        this.clearDescuentoUnitario();
        int row =jTable_Factura.getSelectedRow();
        this.setFocusTablaFact(1);
        this.jDialog_DescuentoUnitario.dispose();
    }//GEN-LAST:event_jButton_CancelarDescuentoUnitarioActionPerformed

    private void jFormattedTextField_descUnitarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jFormattedTextField_descUnitarioMouseClicked
       this.jFormattedTextField_descUnitario.selectAll();
    }//GEN-LAST:event_jFormattedTextField_descUnitarioMouseClicked

    private void jFormattedTextField_descMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jFormattedTextField_descMouseClicked
         this.jFormattedTextField_desc.selectAll();
    }//GEN-LAST:event_jFormattedTextField_descMouseClicked

    private void jComboBox_VendedoresKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox_VendedoresKeyTyped
        if(KeyEvent.VK_ENTER==evt.getKeyChar()){
            this.jComboBox_Vendedores.transferFocus();

        }
    }//GEN-LAST:event_jComboBox_VendedoresKeyTyped
    /**
     *  Este metodo detecta si el usuario ingresa un cliente y verifica si este
     *  existe o no para poder mostrarle la interfaz de crear un cliente.
     * @param evt 
     */
    private void jFormattedTextField_ClientePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jFormattedTextField_ClientePropertyChange
        if (evt.getPropertyName().equals("value")) {
            String cliente = this.jFormattedTextField_Cliente.getText();
            if (!cliente.equals("")) {
                Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
                boolean existeCliente = AdminBD.verSiExisteCliente(cliente);
                if (existeCliente) {
                    return;

                } 
                else {
                    this.jFormattedTextField_nombreCliente.setText(cliente);
                    this.jDialog_CrearCliente.setVisible(true);

                }

            }
        }
    }//GEN-LAST:event_jFormattedTextField_ClientePropertyChange

    private void jFormattedTextField_ClienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextField_ClienteKeyPressed
        if(evt.getKeyChar()==KeyEvent.VK_ENTER){
            this.setFocusTablaFact(0);
        }
    }//GEN-LAST:event_jFormattedTextField_ClienteKeyPressed

    private void jButton_CancelarCrearClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CancelarCrearClienteActionPerformed
        this.jFormattedTextField_Cliente.setValue("Cliente Anonimo");
        this.jDialog_CrearCliente.dispose();
        this.setFocusTablaFact(0);
    }//GEN-LAST:event_jButton_CancelarCrearClienteActionPerformed

    private void jFormattedTextField_ClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jFormattedTextField_ClienteMouseClicked
        this.jFormattedTextField_Cliente.selectAll();
    }//GEN-LAST:event_jFormattedTextField_ClienteMouseClicked

    private void jFormattedTextField_nombreClienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextField_nombreClienteKeyPressed
        if(evt.getKeyChar()==KeyEvent.VK_ENTER){
            this.jFormattedTextField_nombreCliente.transferFocus();
        }
    }//GEN-LAST:event_jFormattedTextField_nombreClienteKeyPressed

    private void jButton_CrearClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CrearClienteActionPerformed
        this.crearCliente();
    }//GEN-LAST:event_jButton_CrearClienteActionPerformed

    private void jFormattedTextField_telefonoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextField_telefonoKeyPressed
         if(evt.getKeyChar()==KeyEvent.VK_ENTER){
            this.jFormattedTextField_telefono.transferFocus();
        }
      
    }//GEN-LAST:event_jFormattedTextField_telefonoKeyPressed

    private void jFormattedTextField_direccionClienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextField_direccionClienteKeyPressed
         if(evt.getKeyChar()==KeyEvent.VK_ENTER){
            this.jFormattedTextField_direccionCliente.transferFocus();
        }
       
    }//GEN-LAST:event_jFormattedTextField_direccionClienteKeyPressed

    private void jFormattedTextField_fechaCumpleKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextField_fechaCumpleKeyPressed
         if(evt.getKeyChar()==KeyEvent.VK_ENTER){
            this.jFormattedTextField_fechaCumple.transferFocus();
        
    }   
    }//GEN-LAST:event_jFormattedTextField_fechaCumpleKeyPressed

    private void jButton_CrearClienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton_CrearClienteKeyPressed
         if(evt.getKeyChar()==KeyEvent.VK_ENTER){
            this.crearCliente();
        }
       
    }//GEN-LAST:event_jButton_CrearClienteKeyPressed

    private void jButton_guardaImprimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_guardaImprimeActionPerformed
        this.guardarFactura();
        boolean impresion=this.imprimir(this.jLabel_NumerodeFact.getText(),
                this.jLabel_Fecha.getText(),
                this.jFormattedTextField_Total.getText(),
                this.jFormattedTextField_SubTotal.getText(),
                this.jFormattedTextField_desc.getText(),
                this.jFormattedTextField_DescuentoTotal.getText(),
                this.jFormattedTextField_Cliente.getText(),
                this.jComboBox_Vendedores.getSelectedItem().toString(),
                this.jComboBox_CategoriaTipoPago.getSelectedItem().toString());
        this.clearAll();
               
        
    }//GEN-LAST:event_jButton_guardaImprimeActionPerformed
    /**
     * Este metodo devuelve toda la informacion de la tabla de crear factura
     * @return 
     */
    private String[][] obtenerInfoTablaFact() {
        MyTableModel_FACT model = (MyTableModel_FACT) jTable_Factura.getModel();
        int filas = model.getRowCount();
        String[][] infoTablaFactura = new String[filas][5];
        for (int i = 0; i < filas; i++) {
            for (int j = 0; j < 5; j++) {              
                if (model.getValueAt(i, j) != null) {
                    String om = model.getValueAt(i, j).toString();
                    if (om.trim().length() != 0) {
                        infoTablaFactura[i][j] = om;                       
                    }
                }
            }
        }
        return infoTablaFactura;
    }
     /**
     * Este metodo carga la informacion de la factura que se desea ver, esta
     * informacion es: cliente,vendedor,totalfact,descuento,fecha,detalle,
     * tipo de pago etc.
     */
    public void cargarInfoFact() {
        Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
        AdminBD.verInfoFactura(Integer.parseInt(this.jLabel_NumerodeFact.getText()));
        Object[][] dataInfoFactura = AdminBD.getData();
        Object[] datosInfoFactura = dataInfoFactura[0];
        String fecha = datosInfoFactura[0].toString();
        String cliente = datosInfoFactura[1].toString();
        String vendedor = datosInfoFactura[2].toString();
        String tipopago = datosInfoFactura[3].toString();
        String totalFact = datosInfoFactura[4].toString();
        String detalle = datosInfoFactura[5].toString();
        String descuento = datosInfoFactura[6].toString();
        this.jFormattedTextField_Cliente.setText(cliente);
        this.jLabel_Fecha.setText(fecha);
        this.jComboBox_Vendedores.setSelectedItem(vendedor);
        this.jComboBox_CategoriaTipoPago.setSelectedItem(tipopago);
        this.jTextField_Detalle.setText(detalle);
        BigDecimal totalFacturado = this.StringtoBigDecimal(totalFact);
        BigDecimal descuentoD = this.StringtoBigDecimal(descuento);
        BigDecimal subtotal = totalFacturado.divide(new BigDecimal("1.00").subtract(descuentoD.divide(new BigDecimal("100.00"))));
        this.jFormattedTextField_DescuentoTotal.setValue(totalFacturado.subtract(subtotal));
        this.jFormattedTextField_SubTotal.setValue(subtotal);
        this.jFormattedTextField_Total.setValue(totalFacturado);
        this.jFormattedTextField_desc.setValue(descuentoD);

    }
    /**
     * Este metodo permite personalizar la tabla de crear Factura
     */
    public void personalizarTablaFactura() {
        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        Date date = new Date();
        this.jLabel_Fecha.setText(dateFormat.format(date));
       Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
        String[] columnNames = {"Cod. Articulo","Articulo",
            "Cantidad","Precio.Unit",
            "Sub-Total"};
        List<Object[]> data = new ArrayList<Object[]>();      
        //Agrega el modelo a la factura
        MyTableModel_FACT model=new MyTableModel_FACT(columnNames,data);
        //Agrega 20 filas
        model.addRow(20);
        this.jTable_Factura.setModel(model);
        AdminBD.verVendedores();
        /** Personalizando el jComboBox_Vendedores para que tenga los vendedores
        * registrados en la base de datos
        */
        Object[][] dataVendedores = AdminBD.getData();
        this.jComboBox_Vendedores.removeAllItems();
        for(int i=0; i<dataVendedores.length; i++){
             this.jComboBox_Vendedores.addItem(dataVendedores[i][1]);
        }
        
        
        
    }
    /**
     * De vuelve un String[] con toda la informacion de una fila de una tabla
     * @param data  
     * //Viene de un consulta UNICAMENTE de una fila
     * @return 
     */
    private String[] obtenerFila(Object[][] data) {
        //System.out.println("ESTO ES LO QUE QUIERO");
        int numFilas= data.length;
        String[] string= new String[numFilas];
        int numColumnas= data[0].length;
        for(int row =0 ; row < numFilas;row++) {
            for(int column =0; column<numColumnas;column++) {
                string[row]=data[row][column].toString();
               
                
            }
            
        }
        return string;
    }
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JButton jButton1;
    javax.swing.JButton jButton2;
    javax.swing.JButton jButton_BuscarProducto;
    javax.swing.JButton jButton_BusqueProducto;
    javax.swing.JButton jButton_CancelaBusquedaProducto;
    javax.swing.JButton jButton_CancelarCrearCliente;
    javax.swing.JButton jButton_CancelarCrearProducto;
    javax.swing.JButton jButton_CancelarDescuentoUnitario;
    javax.swing.JButton jButton_CreaProducto;
    javax.swing.JButton jButton_CrearCliente;
    javax.swing.JButton jButton_CrearProducto;
    javax.swing.JButton jButton_Descuento;
    javax.swing.JButton jButton_EliminaFila;
    javax.swing.JButton jButton_IngresarDescuento;
    javax.swing.JButton jButton_RegresarFact;
    javax.swing.JButton jButton_VerProducto;
    javax.swing.JButton jButton_aceptarFactura;
    javax.swing.JButton jButton_guardaImprime;
    javax.swing.JComboBox jComboBox_CategoriaTipoPago;
    javax.swing.JComboBox jComboBox_Vendedores;
    javax.swing.JDialog jDialog_BuscarProductoPorCod;
    javax.swing.JDialog jDialog_CrearCliente;
    javax.swing.JDialog jDialog_CrearProducto;
    javax.swing.JDialog jDialog_DescuentoUnitario;
    javax.swing.JDialog jDialog_VerProducto;
    javax.swing.JFormattedTextField jFormattedTextField_Cliente;
    javax.swing.JFormattedTextField jFormattedTextField_DescuentoTotal;
    javax.swing.JFormattedTextField jFormattedTextField_PrecioConDesc;
    javax.swing.JFormattedTextField jFormattedTextField_PrecioRegular;
    javax.swing.JFormattedTextField jFormattedTextField_RebajaDelDesc;
    javax.swing.JFormattedTextField jFormattedTextField_SubTotal;
    javax.swing.JFormattedTextField jFormattedTextField_Total;
    javax.swing.JFormattedTextField jFormattedTextField_cantidadProducto;
    javax.swing.JFormattedTextField jFormattedTextField_desc;
    javax.swing.JFormattedTextField jFormattedTextField_descUnitario;
    javax.swing.JFormattedTextField jFormattedTextField_direccionCliente;
    javax.swing.JFormattedTextField jFormattedTextField_fechaCumple;
    javax.swing.JFormattedTextField jFormattedTextField_nombreCliente;
    javax.swing.JFormattedTextField jFormattedTextField_precioProducto;
    javax.swing.JFormattedTextField jFormattedTextField_telefono;
    javax.swing.JLabel jLabel1;
    javax.swing.JLabel jLabel10;
    javax.swing.JLabel jLabel11;
    javax.swing.JLabel jLabel12;
    javax.swing.JLabel jLabel13;
    javax.swing.JLabel jLabel14;
    javax.swing.JLabel jLabel15;
    javax.swing.JLabel jLabel16;
    javax.swing.JLabel jLabel2;
    javax.swing.JLabel jLabel3;
    javax.swing.JLabel jLabel4;
    javax.swing.JLabel jLabel5;
    javax.swing.JLabel jLabel6;
    javax.swing.JLabel jLabel7;
    javax.swing.JLabel jLabel8;
    javax.swing.JLabel jLabel9;
    javax.swing.JLabel jLabel_Cantidad;
    javax.swing.JLabel jLabel_CodNoEncontrado;
    javax.swing.JLabel jLabel_Descripcion;
    javax.swing.JLabel jLabel_DescripcionDescUnitario;
    javax.swing.JLabel jLabel_Fecha;
    javax.swing.JLabel jLabel_FechaCumpleanos;
    javax.swing.JLabel jLabel_FechaFact;
    javax.swing.JLabel jLabel_Nombre;
    javax.swing.JLabel jLabel_NumFacTitle;
    javax.swing.JLabel jLabel_NumerodeFact;
    javax.swing.JLabel jLabel_PrecioUnitario;
    javax.swing.JLabel jLabel_Producto;
    javax.swing.JLabel jLabel_datoCant;
    javax.swing.JLabel jLabel_datoFact;
    javax.swing.JLabel jLabel_datoNomb;
    javax.swing.JLabel jLabel_datoPrecio;
    javax.swing.JLabel jLabel_direccionCliente;
    javax.swing.JLabel jLabel_nombreCliente;
    javax.swing.JLabel jLabel_telefonoCliente;
    javax.swing.JLayeredPane jLayeredPane_VerProducto;
    javax.swing.JPanel jPanel1;
    javax.swing.JPanel jPanel2;
    javax.swing.JPanel jPanel3;
    javax.swing.JPanel jPanel4;
    javax.swing.JScrollPane jScrollPane2;
    javax.swing.JTable jTable_Factura;
    javax.swing.JTextField jTextField_Detalle;
    javax.swing.JTextField jTextField_busqueProducto;
    javax.swing.JTextField jTextField_codigo;
    javax.swing.JTextField jTextField_nombre;
    // End of variables declaration//GEN-END:variables
    /**
     * Este metodo permite crear una factura y guardala en la base de datos
     */
    private void crearFactura() {
        Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
        String Cliente= this.jFormattedTextField_Cliente.getText();
        int idCliente = AdminBD.veridCliente(Cliente);
        int idFactura = Integer.parseInt(this.jLabel_NumerodeFact.getText());
        String vendedor = this.jComboBox_Vendedores.getSelectedItem().toString();
        int idVendedor= AdminBD.veridVendedor(vendedor);
        String tipoPago = this.jComboBox_CategoriaTipoPago.getSelectedItem().toString();
        String detalle= this.jTextField_Detalle.getText();
        String totalFacturaSinCorregir = this.jFormattedTextField_Total.getText();
        BigDecimal totalFact = this.corregirDato(totalFacturaSinCorregir);
        String DescuentoSinCorregir = this.jFormattedTextField_desc.getText();
        DecimalFormat decimaldesc = (DecimalFormat) NumberFormat.getInstance();
        decimaldesc.setParseBigDecimal(true);
        BigDecimal descuento = null;
        try {
            descuento = (BigDecimal) decimaldesc.parseObject(DescuentoSinCorregir);
        } catch (ParseException ex) {
            Logger.getLogger(MyTableModelListener_FACT.class.getName()).
                    log(Level.SEVERE, null, ex);
        }
        //System.out.println(idFactura+" "+descuento+" "+tipoPago+" "+idCliente+" "+idVendedor+" "+detalle+" "+totalFact+" ");
        AdminBD.crearFactura(idFactura,descuento,tipoPago,idCliente,idVendedor,
                "Cancelada",detalle,totalFact,"A");
        }
    /**
     * Cuando se guarda la factura se tiene que volver a crear un nuevo objeto
     * del panel de crear factura
     */
    private void clearAll() {
        VentanaDeInicio mVentana= VentanaDeInicio.getInstance();
        JPanel_CrearFactura panelCreaFact= new JPanel_CrearFactura();
        mVentana.add(panelCreaFact);
        panelCreaFact.setSize(this.getSize());
        panelCreaFact.setLocation(this.getLocation());
        mVentana.remove(this);
        panelCreaFact.setVisible(true);
        mVentana.revalidate();
        mVentana.repaint();
        mVentana.setTitle("Factura");
        Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
        String factura = Integer.toString(AdminBD.ObtenerUltimoidFact() + 1);
        panelCreaFact.jLabel_NumerodeFact.setText(factura);
        panelCreaFact.personalizarTablaFactura();
        panelCreaFact.agregarListenerRenders();
    }

    private void aplicarDescAlProducto(String idProducto, BigDecimal precio) {
        this.jDialog_DescuentoUnitario.setVisible(true);
        this.jLabel_DescripcionDescUnitario.setText(idProducto);
        this.jFormattedTextField_PrecioRegular.setValue(precio);     
                
    }
    /**
     * Este metodo permite corregir el dato que tiene el signo de C y ademas
     * que puede tener comas ya que el tipo Decimal en la base solo
     * puede tener puntos y no comas.
     * @param Dato
     * @return 
     */
    private BigDecimal corregirDato(String Dato){
            String datoAcorregir = Dato.replace("C", "");
            DecimalFormat decimalformat = (DecimalFormat) NumberFormat.getInstance();
            decimalformat.setParseBigDecimal(true);
            BigDecimal DatoCorregido = null;
            try {
                DatoCorregido = (BigDecimal) decimalformat.parseObject(datoAcorregir);
            } catch (ParseException ex) {
                Logger.getLogger(MyTableModelListener_FACT.class.getName()).log(Level.SEVERE, null, ex);
            }
            return DatoCorregido;
    
    }

    private void crearCliente() {
        Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
        String nombre= this.jFormattedTextField_nombreCliente.getText();
        String direccion= this.jFormattedTextField_direccionCliente.getText();
        String telefono= this.jFormattedTextField_telefono.getText();
        String fechaCumpleanos = this.jFormattedTextField_fechaCumple.getText();
        if(fechaCumpleanos.equals("")){
            fechaCumpleanos=null;
        }
        AdminBD.insertarCliente(nombre,direccion,1,telefono,fechaCumpleanos);
        this.jFormattedTextField_Cliente.setValue(nombre);
        this.jDialog_CrearCliente.dispose();
    }

    private void guardarFactura() {
        if (jTable_Factura.isEditing()) {
            jTable_Factura.getCellEditor().cancelCellEditing();
            
        }
        if(jTable_Factura.getValueAt(0,0).equals("")){
            JOptionPane.showMessageDialog(
                          null,
                          "No se puede guardar facturas"
                                  + " si no tienen ningun producto",                           
                          "Alert!", JOptionPane.ERROR_MESSAGE);
            return;
        }
        this.crearFactura();   
        this.guardarProductosFactura();
    }
     /**
     * Imprime la factura.
     * @param numFact  //Debe ser Generico.
     * @param date
     * @param totalFact
     * @return 
     */
    private boolean imprimir(String numFact, String date,String totalFact,String subtotalFact,String desc,String rebaja,String cliente,
            String vendedor,String venta) {
         try {
            String rawCmds = "FIRST NAME";
            String printer = "Generic / Text Only"; // debe tener 
            //el mismo nombre que la impresora 
            PrintService ps = PrintServiceMatcher.findPrinter(printer);
            if (ps != null) {
                
                PrintRaw p = new PrintRaw(ps, rawCmds);
               /** p.clear();
                p.append("N\n");
                p.append("^XA\n");
                p.append("^FO350,355^A0N,30,30^FD\"" + title + "\"\n");
                p.append("^XZ\n");
                p.append("P1,1\n");**/
                p.clear();
                p.append("\u001B\u0040"); //reset printer 
                //p.append("\u001B"+"\u0045"+"\u0001"+"\r");//Negrita
                /***********************************************************/
                
                p.append("\u001B"+"\u0061"+"\u0001"+"\r");//*** Centrado
                p.append("Boutique Francini\r\n");
                p.append("San Jose, Costa Rica\r\n");
                p.append("Tel:228826962,pulgamontes@gmail.com\r\n");
                p.append("Resolucion nro. 234252 del 2003-89\r\n");
                p.append("\u001B"+"\u0064"+"\u0001"+"\r");//*** 3lineas
                /**********************************************************/
                //p.append("\u001B"+"\u0045"+"\u0000"+"\r");//QuitalaNegrita
                /***********************************************************/
                
                p.append("\u001B"+"\u0061"+"\u0000"+"\r");//Quita Centrado
                p.append("Fecha   : \t "+date+"\r\n");
                p.append("NoFact  : \t "+numFact+"\r\n");
                p.append("Cliente : \t "+cliente+"\r\n");
                p.append("Vendedor: \t "+vendedor+"\r\n");
                p.append("Venta   : \t "+venta+"\r\n");
                p.append("CANT. \t DESCRIPCION \t      TOTAL\r\n");
                p.append("----  ----------------       ------\r\n");
                
                /***********************************************************/
                MyTableModel_FACT dtm = (MyTableModel_FACT) 
                        jTable_Factura.getModel();
                int nRow = dtm.getRowCount();
                for (int i = 0; i < nRow; i++) {
                    String Producto = dtm.getValueAt(i, 1).toString();
                    if (!Producto.equals("")) {
                        String cantidad = dtm.getValueAt(i, 2).toString();
                        String subtotal=dtm.getValueAt(i, 4).toString();
                        p.append(""  +Producto+"   \r\n");
                        p.append(""  +cantidad+"                           "
                                + ""+subtotal+"   \r\n");
                    }


                }
                
                //p.append("----  ----------------    -----------   \r\n");
                //p.append("----------------------------------------\r\n"); 
                /*
                 * Importante solo se esta usando la parte hexadecimal
                 * //u00HEX
                 * junto con el archivo ESC-POS-Programming-Guide
                 */
                /*
                 * Para centrado y Derecha se esta usando la descripcion 
                 * que viene en esta pagina donde dice other 
                 * http://www.lprng.com/DISTRIB/RESOURCES/PPD/epson.htm 
                 * (FAVORITOS)
                 */
                p.append("\u001B"+"\u0061"+"\u0002"+"\r");//*** Derecha
                p.append("\u001B"+"\u0064"+"\u0003"+"\r");//*** 1lineas
                String subto= " SUB TOTAL : \t " + subtotalFact+"";
                String subtoCantidad=this.fill(subto,25," ");
                p.append(subtoCantidad+ "\r\n");
                p.append(this.fill(" DESCTO  % : \t " +desc+"",subtoCantidad.length()," ")+"\r\n");
                p.append(this.fill(" DESCUENTO : \t " +rebaja+"",subtoCantidad.length()," ")+"\r\n");
                p.append("---------------------------\r\n"); 
                p.append(this.fill(" T O T A L : \t " + totalFact+"",subtoCantidad.length()," ")+"\r\n");
                p.append("\u001B"+"\u0061"+"\u0000"+"\r");//Quita Centrado
                p.append("\u001B"+"\u0061"+"\u0001"+"\r");//*** Centrado
                p.append("\u001B"+"\u0064"+"\u0004"+"\r");//*** 3lineas
                p.append("Muchas Gracias por su compra\r\n");
                p.append("\u001B\u0040");//reset printer
                p.append("\u001B"+"\u0064"+"\u0008"+"\r");//*** 10lineas**/
                p.append("\u001D"+"\u0056"+"\u0001"+"\r");//*** CutPaper
                //p.append("-Texto sin negrita-\r\n");
                //p.append("-XXXXXXXXXXXXXX-\r\n");
               	return p.print();
                
                
            } else {
                System.err.println("No encontro ninguna impresora");
                return false;
            }

        } catch (Exception e) {
            e.printStackTrace();
            return false;
        }
    }
    public String fill(int length, String with) {
        StringBuilder sb = new StringBuilder(length);
        while (sb.length() < length) {
            sb.append(with);
        }
        return sb.toString();
    }

    public String fill(String value, int length, String with) {

        StringBuilder result = new StringBuilder(length);
        result.append(value);
        result.append(fill(Math.max(0, length - value.length()), with));

        return result.toString();

    }
    
    public void cargarProductosFact(MyTableModel_FACT  model ) {
        Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
        AdminBD.verProductosPorFactura(Integer.parseInt(this.jLabel_NumerodeFact.getText()));
        Object[][] ProductosdeFactura = AdminBD.getData();
        int numFilas = ProductosdeFactura.length;
        for (int row = 0; row < numFilas; row++) {
            Object[] producto= ProductosdeFactura[row];
            String codArticulo= producto[0].toString();
            String nombre= producto[1].toString();
            BigDecimal cantidad= this.StringtoBigDecimal(producto[2].toString());
            BigDecimal precioVenta= this.StringtoBigDecimal(producto[3].toString());
            model.setValueAt(codArticulo, row, 0);
            model.setValueAt(nombre, row, 1);
            model.setValueAt(cantidad, row, 2);
            model.setValueAt(precioVenta, row, 3);
            model.setValueAt(precioVenta.multiply(cantidad), row, 4);
            
            
            }
    }
    
     /**
     * Este metodo convierte un string que es un decimal a bigdecimal
     * @param numero
     * @return 
     */
    private BigDecimal StringtoBigDecimal(String numero){
        DecimalFormat decimalfC = (DecimalFormat) NumberFormat.getInstance();
        decimalfC.setParseBigDecimal(true);
        BigDecimal numeroCorregido = null;
        try {
            numeroCorregido = (BigDecimal) decimalfC.parseObject(numero);
        } catch (ParseException ex) {
            Logger.getLogger(JPanel_VerFactura.class.getName()).log(Level.SEVERE, null, ex);
        }
        return numeroCorregido;
    
    }

    public void agregarListenerRenders() {
        Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
         //Gana la atencion en el panel
        jTable_Factura.requestFocus();
        jTable_Factura.changeSelection(0,0,false, false);
        //AGREGA EL LISTENER QUE PERMITE HACER TODOS LOS EVENTOS DENTRO DE LA 
        //TABLA DE FACTURA //IMPORTANTE ESTOS EVENTOS ESTAN EN LA CLASE DE
        //MY TABLE MODEL LISTENER EN el metodo: tableChanged(TableModelEvent e)
        this.jTable_Factura.getModel().addTableModelListener(
                new MyTableModelListener_FACT(this.jTable_Factura,"",
                this.jFormattedTextField_SubTotal,AdminBD));
        //Permite que la primera columna de Codigos se desplace segun lo que
        // haya en la base de datos
        AdminBD.verCodigos();
        //Si no existen productos en la base que no los carge al editor
        if(AdminBD.getData().length>0){
        this.cargarSeleccionadorProductos();}
        //Costumisando Precio y Cantidad (Solo van a permitir numeros)
        DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
        rightRenderer.setHorizontalAlignment( JLabel.RIGHT );
              
        this.jTable_Factura.getColumnModel().getColumn(2).
                setCellRenderer(rightRenderer);
        this.jTable_Factura.getColumnModel().getColumn(3).
                setCellRenderer(new CurrencyRender());
        this.jTable_Factura.getColumnModel().getColumn(4).
                setCellRenderer(new CurrencyRender());
        this.jTable_Factura.getColumnModel().getColumn(2).
                setCellEditor(new EditorDeCelda_Cantidad());
        this.jTable_Factura.getColumnModel().getColumn(3).
                setCellEditor(new EditorDeCeldaNumeros());
        //Demasiado importante ******Permite que se pueda editar apenas se 
        //ingresan datos*****
        this.jTable_Factura.setSurrendersFocusOnKeystroke(true);        
       
        //Agregando por default los datos del comboBox de vendedores y del 
        //cliente
        this.jComboBox_Vendedores.setSelectedItem("Sin Categoria");
        
    }

    private void modificaFactura() {
        //Hace la factura vieja en estado inhabilitada
        Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
        AdminBD.eliminarFacturaPorModificacion(Integer.parseInt(this.jLabel_NumerodeFact.getText()));
    }

    private void devolverProductos() {
        Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
        AdminBD.verProductosPorFactura(Integer.parseInt(this.jLabel_NumerodeFact.getText()));
        Object[][] ProductosdeFactura = AdminBD.getData();
        int numFilas = ProductosdeFactura.length;
        for (int row = 0; row < numFilas; row++) {
            Object[] producto= ProductosdeFactura[row];
            String codArticulo= producto[0].toString();
            int cantidadTotal = AdminBD.verCantidad(codArticulo);
            int cantidad= Integer.parseInt(producto[2].toString());
            AdminBD.actualizarCantidadInventario(codArticulo,cantidadTotal+cantidad);
            
            
            }
    }

    private void cargarSeleccionadorProductos() {
         Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
         AdminBD.verCodigos();
            String[] idproductos=this.obtenerFila(AdminBD.getData());
            this.jTable_Factura.getColumnModel().getColumn(0).
                setCellEditor(new SeleccionadorEditor
        (idproductos,jTable_Factura));
            
            
            
            
             
    }
    
}
