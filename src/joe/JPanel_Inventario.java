/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package joe;

import db_managment.Direct_Control_BD;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JLabel;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author edward
 */
public class JPanel_Inventario extends javax.swing.JPanel {

    /**
     * Creates new form JPanel_Inventario
     */
    
    private static JPanel_Inventario mPanelInventario=null;
    
    private JPanel_Inventario() {
        initComponents();
        colocarInventario();
    }
    
    public static JPanel_Inventario getInstance(){
        if(mPanelInventario==null)
        {
            mPanelInventario=new JPanel_Inventario();
        }
        
        return mPanelInventario;
        
        
    }
    
    private void personalizarTablaInventario() {
    /*    DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
        Date date = new Date();
      //  this.jTextField_Date.setText(dateFormat.format(date))
        String[] columnNames = {"Edward","Uma;a","Relacion","Relacion",
            "Relacion"};
        List<Object[]> data = new ArrayList<Object[]>();
                 
        
        
        //Agrega el modelo a la factura
        MyTableModel_FACT model=new MyTableModel_FACT(columnNames,data);
        //Agrega 5 filas
        model.addRow(11);
       
        this.jTable_Inventario.setModel(model);
        //Gana la atencion en el panel
        jTable_Inventario.requestFocus();
        jTable_Inventario.changeSelection(0,0,false, false);
        //AGREGA EL LISTENER QUE PERMITE HACER TODOS LOS EVENTOS DENTRO DE LA 
        //TABLA DE FACTURA //IMPORTANTE ESTOS EVENTOS ESTAN EN LA CLASE DE
        //MY TABLE MODEL LISTENER EN el metodo: tableChanged(TableModelEvent e)
      /*   this.jTable_Inventario.getModel().addTableModelListener(
                new MyTableModelListener_FACT(jTable_Inventario,"",
                this.jTextField1,this.AdministradorBD));
        //Permite que la primera columna de Codigos se desplace segun lo que
        // haya en la base de datos
     /*   this.AdministradorBD.verCodigos();
        String[] idproductos=this.obtenerFila(this.AdministradorBD.getData());
        this.jTable_Inventario.getColumnModel().getColumn(0).
                setCellEditor(new SeleccionadorEditor(idproductos,jTable_Factura));
        Permite que la segunda columna de Descripciones se desplace segun 
        lo que haya en la base de datos
        BDmanagment.get_DescProductos();
        String[] desc_Productos=this.get_Fila(this.BDmanagment.getData());
        this.jTable_Factura.getColumnModel().getColumn(1).
                setCellEditor(new SeleccionadorEditor(desc_Productos,jTable_Factura));**/
       /* Costumisando Precio y Cantidad (Solo van a permitir numeros)
        this.jTable_Factura.getColumnModel().getColumn(2).
                setCellEditor(new MyCellEditor());
        this.jTable_Factura.getColumnModel().getColumn(3).
                setCellEditor(new MyCellEditor());
        Demasiado importante ******Permite que se pueda editar apenas se 
        //ingresan datos
        this.jTable_Factura.setSurrendersFocusOnKeystroke(true);
        
        */
    }

    public void colocarInventario(){
      Direct_Control_BD AdministradorBD= Direct_Control_BD.getInstance();
        AdministradorBD.verInventario();
        String[] columnNames = AdministradorBD.getColumnNames();
        Object[][] data = AdministradorBD.getData();
        //Crea la tabla generica para Facturas
        
        this.jTable_Inventario.setModel(new Modelo_Inventario(columnNames,data));
        //Alinea la primer columna de esta tabla hacia el centro
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer
                ();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER );
        this.jTable_Inventario.getColumnModel().getColumn(0).setCellRenderer
                (centerRenderer);
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonRegresarInventario = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable_Inventario = new javax.swing.JTable();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();

        jButtonRegresarInventario.setText("Regresar");
        jButtonRegresarInventario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRegresarInventarioActionPerformed(evt);
            }
        });

        jButton6.setText("jButton6");

        jTable_Inventario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable_Inventario);

        jButton7.setText("jButton7");

        jButton8.setText("jButton8");

        jTextField1.setText("jTextField1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton6)
                        .addGap(31, 31, 31)
                        .addComponent(jButton7)
                        .addGap(43, 43, 43)
                        .addComponent(jButton8)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(143, 143, 143)
                .addComponent(jButtonRegresarInventario)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jButton7)
                    .addComponent(jButton8))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jButtonRegresarInventario))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonRegresarInventarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRegresarInventarioActionPerformed
       // this.setVisible(false);
      //  this.add(jPanel_VentanaPrincipal);
       // this.revalidate();
      //  this.repaint();
        //this.setTitle("Pagina Principal");
        //jPanel_VentanaPrincipal.setVisible(true);
     
        
       
        
    }//GEN-LAST:event_jButtonRegresarInventarioActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButtonRegresarInventario;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable_Inventario;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
