/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package joe;

import db_managment.Direct_Control_BD;
import java.util.Vector;
import javax.swing.JLabel;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Oscar Montes
 */
public class NewJDialog_Buscador extends javax.swing.JDialog {

    /**
     * Creates new form NewJDialog_Buscador
     */
    private String idFactura;
    private String Cliente;
    private String idProducto;
    private String Categoria;
    public JPanel_CrearFactura panel;

    public NewJDialog_Buscador() {

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        TextField_Buscador = new javax.swing.JFormattedTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_Generica = new javax.swing.JTable();
        jButton_AceptarBusqueda = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setModal(true);

        jLabel1.setText("Buscar:");

        jTable_Generica.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable_Generica.setFillsViewportHeight(true);
        jTable_Generica.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_GenericaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_Generica);
        jTable_Generica.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        jButton_AceptarBusqueda.setText("Aceptar");
        jButton_AceptarBusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_AceptarBusquedaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(TextField_Buscador, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 619, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton_AceptarBusqueda)
                .addGap(42, 42, 42))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(TextField_Buscador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addComponent(jButton_AceptarBusqueda)
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_AceptarBusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_AceptarBusquedaActionPerformed

        try {
            setIdProducto(jTable_Generica.getValueAt(this.jTable_Generica.getSelectedRow(), 0).toString());
            setCliente(jTable_Generica.getValueAt(this.jTable_Generica.getSelectedRow(), 0).toString());
            setIdFactura(jTable_Generica.getValueAt(this.jTable_Generica.getSelectedRow(), 1).toString());
            setCatgeria(jTable_Generica.getValueAt(this.jTable_Generica.getSelectedRow(), 1).toString());

        } catch (Exception e) {
        }
        this.dispose();
    }//GEN-LAST:event_jButton_AceptarBusquedaActionPerformed

    private void jTable_GenericaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_GenericaMouseClicked
        if (evt.getClickCount() == 2) {
            this.jButton_AceptarBusqueda.doClick();
        }
    }//GEN-LAST:event_jTable_GenericaMouseClicked

    /**
     * Actualiza la tabla que se ve en el buscador generico, para este caso debe
     * ser una consulta al inventario
     */
    public void actualizaTablaParaInventario() {
        Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
        AdminBD.verInventario();
        String[] columnNames = AdminBD.getColumnNames();
        Object[][] data = AdminBD.getData();
        this.jTable_Generica.setModel(new MyTableModel_Generic(columnNames, data));
        //Crea el ordenador para la tabla generica
        TableRowSorter<TableModel> ordenador = new TableRowSorter<TableModel>(this.jTable_Generica.getModel());
        this.jTable_Generica.setRowSorter(ordenador);
        Vector<RowSorter.SortKey> qq = new Vector<RowSorter.SortKey>();
        qq.add(new RowSorter.SortKey(0, SortOrder.ASCENDING));
        ordenador.setSortKeys(qq);
        jTable_Generica.requestFocus();
        jTable_Generica.changeSelection(0, 0, false, false);
        /**
         * Agrega el listener al JtextField del buscador *
         */
        this.TextField_Buscador.getDocument().addDocumentListener(new ListenerBuscador(this.TextField_Buscador, ordenador));

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JFormattedTextField TextField_Buscador;
    javax.swing.JButton jButton_AceptarBusqueda;
    javax.swing.JLabel jLabel1;
    javax.swing.JScrollPane jScrollPane1;
    javax.swing.JTable jTable_Generica;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the idProducto
     */
    public String getIdProducto() {
        setVisible(true);
        return idProducto;
    }

    /**
     * @param idProducto the idProducto to set
     */
    public void setIdProducto(String idProducto) {
        this.idProducto = idProducto;
    }

    void actualizaTablaParaClientes() {
        Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
        AdminBD.consultarClientes();
        String[] columnNames = AdminBD.getColumnNames();
        Object[][] data = AdminBD.getData();
        this.jTable_Generica.setModel(new MyTableModel_Generic(columnNames, data));
        //Crea el ordenador para la tabla generica
        TableRowSorter<TableModel> ordenador = new TableRowSorter<TableModel>(this.jTable_Generica.getModel());
        this.jTable_Generica.setRowSorter(ordenador);
        Vector<RowSorter.SortKey> qq = new Vector<RowSorter.SortKey>();
        qq.add(new RowSorter.SortKey(0, SortOrder.ASCENDING));
        ordenador.setSortKeys(qq);
        jTable_Generica.requestFocus();
        jTable_Generica.changeSelection(0, 0, false, false);
        /**
         * Agrega el listener al JtextField del buscador *
         */
        this.TextField_Buscador.getDocument().addDocumentListener(new ListenerBuscador(this.TextField_Buscador, ordenador));

    }

    /**
     * @return the Cliente
     */
    public String getCliente() {
        setVisible(true);
        return Cliente;
    }

    /**
     * @param Cliente the Cliente to set
     */
    public void setCliente(String Cliente) {
        this.Cliente = Cliente;
    }

    public void setIdFactura(String idFactura) {
        this.idFactura = idFactura;
    }

    public String getIdFactura() {
        setVisible(true);
        return idFactura;
    }

    public void actualizaTablaParaFacturasModificadas() {
        Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
        AdminBD.ObtenerFactModificadaOriginales();
        Object[][] data = AdminBD.getData();
        String[] columnNames = AdminBD.getColumnNames();

        this.jTable_Generica.setModel(new MyTableModel_Generic(columnNames, data));
        //Crea el ordenador para la tabla generica
        TableRowSorter<TableModel> ordenador = new TableRowSorter<TableModel>(this.jTable_Generica.getModel());
        this.jTable_Generica.setRowSorter(ordenador);
        Vector<RowSorter.SortKey> qq = new Vector<RowSorter.SortKey>();
        qq.add(new RowSorter.SortKey(0, SortOrder.ASCENDING));
        ordenador.setSortKeys(qq);
        jTable_Generica.requestFocus();
        jTable_Generica.changeSelection(0, 0, false, false);
        /**
         * Agrega el listener al JtextField del buscador *
         */
        this.TextField_Buscador.getDocument().addDocumentListener(new ListenerBuscador(this.TextField_Buscador, ordenador));

    }
    public void actualizaTablaParaDevolucionesModificadas() {
        Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
        AdminBD.ObtenerDevModificadasOriginales();
        Object[][] data = AdminBD.getData();
        String[] columnNames = AdminBD.getColumnNames();

        this.jTable_Generica.setModel(new MyTableModel_Generic(columnNames, data));
        //Crea el ordenador para la tabla generica
        TableRowSorter<TableModel> ordenador = new TableRowSorter<TableModel>(this.jTable_Generica.getModel());
        this.jTable_Generica.setRowSorter(ordenador);
        Vector<RowSorter.SortKey> qq = new Vector<RowSorter.SortKey>();
        qq.add(new RowSorter.SortKey(0, SortOrder.ASCENDING));
        ordenador.setSortKeys(qq);
        jTable_Generica.requestFocus();
        jTable_Generica.changeSelection(0, 0, false, false);
        /**
         * Agrega el listener al JtextField del buscador *
         */
        this.TextField_Buscador.getDocument().addDocumentListener(new ListenerBuscador(this.TextField_Buscador, ordenador));

    }

    public void actualizaTablaParaCategorias() {
        Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
        AdminBD.consultarCategorias();
        String[] columnNames = AdminBD.getColumnNames();
        Object[][] data = AdminBD.getData();
        this.jTable_Generica.setModel(new MyTableModel_Generic(columnNames, data));
        //Crea el ordenador para la tabla generica
        TableRowSorter<TableModel> ordenador = new TableRowSorter<TableModel>(this.jTable_Generica.getModel());
        this.jTable_Generica.setRowSorter(ordenador);
        Vector<RowSorter.SortKey> qq = new Vector<RowSorter.SortKey>();
        qq.add(new RowSorter.SortKey(0, SortOrder.ASCENDING));
        ordenador.setSortKeys(qq);
        jTable_Generica.requestFocus();
        jTable_Generica.changeSelection(0, 0, false, false);
        /**
         * Agrega el listener al JtextField del buscador *
         */
        this.TextField_Buscador.getDocument().addDocumentListener(new ListenerBuscador(this.TextField_Buscador, ordenador));

    }

    public String getCatgeria() {
        setVisible(true);
        return Categoria;
    }

    public void setCatgeria(String categoria) {
        Categoria = categoria;
    }

}

//Realiza la consulta para obtener las facturas

