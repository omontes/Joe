/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package joe;

import Etiquetas.Imprimir;
import ManejoDeArchivos.XMLConfiguracion;
import db_managment.Direct_Control_BD;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.File;
import java.math.BigDecimal;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.print.PrintService;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.AbstractDocument;
import javax.swing.text.DocumentFilter;
import jzebra.PrintRaw;
import jzebra.PrintServiceMatcher;

/**
 *
 * @author Oscar Montes
 */
public class Pan_CrearEntradaSalida extends javax.swing.JPanel {

    /**
     * Creates new form JPanel_CrearEntradaSalidaMercaderia
     */
    boolean cargoArchivo = false;
    private int _callType;
    public static final int ENTRADA = 0;    
    public static final int SALIDA = 1;
    
    public Pan_CrearEntradaSalida(int pCallType) {
        initComponents();
        _callType = pCallType;
        setTittle(pCallType);
    }

    private void setTittle(int pCallType){
        if (pCallType == ENTRADA){
            txtDscr.setText("Nueva Entrada");
        } else if (pCallType == SALIDA) {
            txtDscr.setText("Nueva Salida");
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog_CrearProducto = new javax.swing.JDialog();
        jPanel2 = new javax.swing.JPanel();
        jTextField_codigo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField_nombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton_CrearProducto = new javax.swing.JButton();
        jButton_CancelarCrearProducto = new javax.swing.JButton();
        jFormattedTextField_precioProducto = new javax.swing.JFormattedTextField();
        jFormattedTextField_cantidadProducto = new javax.swing.JFormattedTextField();
        jLabel9 = new javax.swing.JLabel();
        jDialog_VerProducto = new javax.swing.JDialog();
        jLayeredPane_VerProducto = new javax.swing.JLayeredPane();
        jLabel_Nombre = new javax.swing.JLabel();
        jLabel_Cantidad = new javax.swing.JLabel();
        jLabel_PrecioUnitario = new javax.swing.JLabel();
        jLabel_datoNomb = new javax.swing.JLabel();
        jLabel_datoCant = new javax.swing.JLabel();
        jLabel_datoPrecio = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel_Descripcion = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel_datoDescrip = new javax.swing.JLabel();
        jDialog_BuscarProductoPorCod = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jButton_BusqueProducto = new javax.swing.JButton();
        jButton_CancelaBusquedaProducto = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jTextField_busqueProducto = new javax.swing.JTextField();
        jLabel_CodNoEncontrado = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel_Fecha = new javax.swing.JLabel();
        jFormattedTextField_Total = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel_NumerodeMovimiento = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jComboBox_LugarDeMov = new javax.swing.JComboBox();
        jLabel_tipoMovimiento = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_Movimiento = new javax.swing.JTable();
        jTextField_referencia = new javax.swing.JTextField();
        bttNewProd = new javax.swing.JLabel();
        bttWatch = new javax.swing.JLabel();
        bttTrash = new javax.swing.JLabel();
        bttSearch = new javax.swing.JLabel();
        bttExcel = new javax.swing.JLabel();
        bttLabels = new javax.swing.JLabel();
        bttSave = new javax.swing.JLabel();
        bttPrint = new javax.swing.JLabel();
        txtDscr = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        jDialog_CrearProducto.setUndecorated(true);
        jDialog_CrearProducto.setPreferredSize(new java.awt.Dimension(320, 220));
        jDialog_CrearProducto.setResizable(false);
        jDialog_CrearProducto.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(153, 153, 153));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setMinimumSize(new java.awt.Dimension(320, 220));
        jPanel2.setPreferredSize(new java.awt.Dimension(320, 220));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextField_codigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_codigoKeyTyped(evt);
            }
        });
        jPanel2.add(jTextField_codigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 50, 175, -1));

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Codigo del Producto");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, 20));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nombre del Producto");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 106, 20));

        jTextField_nombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_nombreKeyTyped(evt);
            }
        });
        jPanel2.add(jTextField_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 80, 175, -1));

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Precio del Producto");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 106, 20));

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Cantidad del Producto");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, -1, 20));

        jButton_CrearProducto.setText("Aceptar");
        jButton_CrearProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CrearProductoActionPerformed(evt);
            }
        });
        jButton_CrearProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton_CrearProductoKeyPressed(evt);
            }
        });
        jPanel2.add(jButton_CrearProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 180, -1, -1));

        jButton_CancelarCrearProducto.setText("Cancelar");
        jButton_CancelarCrearProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CancelarCrearProductoActionPerformed(evt);
            }
        });
        jButton_CancelarCrearProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton_CancelarCrearProductoKeyPressed(evt);
            }
        });
        jPanel2.add(jButton_CancelarCrearProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 180, -1, -1));

        jFormattedTextField_precioProducto.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        jFormattedTextField_precioProducto.setText("0.00");
        jFormattedTextField_precioProducto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jFormattedTextField_precioProductoFocusGained(evt);
            }
        });
        jFormattedTextField_precioProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jFormattedTextField_precioProductoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jFormattedTextField_precioProductoKeyTyped(evt);
            }
        });
        jPanel2.add(jFormattedTextField_precioProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 110, 175, -1));

        jFormattedTextField_cantidadProducto.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        jFormattedTextField_cantidadProducto.setText("0");
        jFormattedTextField_cantidadProducto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jFormattedTextField_cantidadProductoFocusGained(evt);
            }
        });
        jFormattedTextField_cantidadProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jFormattedTextField_cantidadProductoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jFormattedTextField_cantidadProductoKeyTyped(evt);
            }
        });
        jPanel2.add(jFormattedTextField_cantidadProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 140, 175, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Crear Producto");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jDialog_CrearProducto.getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 320, 220));

        jDialog_VerProducto.setTitle("Ver Producto");
        jDialog_VerProducto.setModal(true);
        jDialog_VerProducto.setUndecorated(true);
        jDialog_VerProducto.setResizable(false);
        jDialog_VerProducto.setLocationRelativeTo(null);
        jDialog_VerProducto.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLayeredPane_VerProducto.setBackground(new java.awt.Color(153, 153, 153));
        jLayeredPane_VerProducto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLayeredPane_VerProducto.setMaximumSize(new java.awt.Dimension(470, 210));
        jLayeredPane_VerProducto.setMinimumSize(new java.awt.Dimension(470, 210));
        jLayeredPane_VerProducto.setOpaque(true);
        jLayeredPane_VerProducto.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel_Nombre.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_Nombre.setText("Nombre");
        jLayeredPane_VerProducto.add(jLabel_Nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 60, 29));

        jLabel_Cantidad.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_Cantidad.setText("Cantidad");
        jLayeredPane_VerProducto.add(jLabel_Cantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 60, 29));

        jLabel_PrecioUnitario.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_PrecioUnitario.setText("Precio Unitario");
        jLayeredPane_VerProducto.add(jLabel_PrecioUnitario, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 90, 29));

        jLabel_datoNomb.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel_datoNomb.setForeground(new java.awt.Color(0, 51, 51));
        jLabel_datoNomb.setText("NOMBRE DEL PRODUCTO");
        jLayeredPane_VerProducto.add(jLabel_datoNomb, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 50, 360, 29));

        jLabel_datoCant.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel_datoCant.setForeground(new java.awt.Color(0, 51, 51));
        jLabel_datoCant.setText("CANTIDAD");
        jLayeredPane_VerProducto.add(jLabel_datoCant, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 80, 360, 29));

        jLabel_datoPrecio.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel_datoPrecio.setForeground(new java.awt.Color(0, 51, 51));
        jLabel_datoPrecio.setText("PRECIO UNITARIO");
        jLayeredPane_VerProducto.add(jLabel_datoPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 110, 360, 29));

        jButton2.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 51, 51));
        jButton2.setText("Aceptar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton2KeyPressed(evt);
            }
        });
        jLayeredPane_VerProducto.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 170, 81, -1));

        jLabel_Descripcion.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_Descripcion.setText("Descripcion");
        jLayeredPane_VerProducto.add(jLabel_Descripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 70, 29));

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Ver Producto");
        jLayeredPane_VerProducto.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 18, -1, -1));

        jLabel_datoDescrip.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel_datoDescrip.setForeground(new java.awt.Color(0, 51, 51));
        jLabel_datoDescrip.setText("DESCRIPCION");
        jLayeredPane_VerProducto.add(jLabel_datoDescrip, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 140, 360, 29));

        jDialog_VerProducto.getContentPane().add(jLayeredPane_VerProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 470, 210));

        jDialog_BuscarProductoPorCod.setTitle("Buscar Producto");
        jDialog_BuscarProductoPorCod.setUndecorated(true);
        jDialog_BuscarProductoPorCod.setResizable(false);
        jDialog_BuscarProductoPorCod.setLocationRelativeTo(null);
        jDialog_BuscarProductoPorCod.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setPreferredSize(new java.awt.Dimension(295, 125));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton_BusqueProducto.setText("Buscar");
        jButton_BusqueProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_BusqueProductoActionPerformed(evt);
            }
        });
        jButton_BusqueProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton_BusqueProductoKeyPressed(evt);
            }
        });
        jPanel1.add(jButton_BusqueProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 90, -1, -1));

        jButton_CancelaBusquedaProducto.setText("Cancelar");
        jButton_CancelaBusquedaProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CancelaBusquedaProductoActionPerformed(evt);
            }
        });
        jPanel1.add(jButton_CancelaBusquedaProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 90, -1, -1));

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Ingrese el Codigo");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 55, -1, -1));

        jTextField_busqueProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField_busqueProductoKeyPressed(evt);
            }
        });
        jPanel1.add(jTextField_busqueProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 50, 185, -1));
        jPanel1.add(jLabel_CodNoEncontrado, new org.netbeans.lib.awtextra.AbsoluteConstraints(143, 119, 81, 13));

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Buscar Producto");
        jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 12, -1, -1));

        jDialog_BuscarProductoPorCod.getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 320, 130));

        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(800, 474));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel_Fecha.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel_Fecha.setText("Aqui va la fecha");
        add(jLabel_Fecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(532, 35, 260, 20));

        jFormattedTextField_Total.setEditable(false);
        jFormattedTextField_Total.setForeground(new java.awt.Color(255, 0, 0));
        jFormattedTextField_Total.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("C#,##0.00;(C#,##0.00)"))));
        jFormattedTextField_Total.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jFormattedTextField_Total.setText("0.00");
        jFormattedTextField_Total.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        add(jFormattedTextField_Total, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 420, 311, 40));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Total");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 420, 60, 40));

        jLabel_NumerodeMovimiento.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel_NumerodeMovimiento.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_NumerodeMovimiento.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel_NumerodeMovimiento.setText("Num");
        add(jLabel_NumerodeMovimiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(625, 5, 170, -1));

        jLabel7.setText("Referencia");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 35, 69, 20));

        jComboBox_LugarDeMov.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Inventario General", "Bodega" }));
        add(jComboBox_LugarDeMov, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 5, 130, -1));

        jLabel_tipoMovimiento.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_tipoMovimiento.setText("Entrada a:");
        add(jLabel_tipoMovimiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 5, 70, 20));

        jTable_Movimiento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTable_Movimiento.setCellSelectionEnabled(true);
        jTable_Movimiento.setFillsViewportHeight(true);
        jTable_Movimiento.setSurrendersFocusOnKeystroke(true);
        jTable_Movimiento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable_MovimientoKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(jTable_Movimiento);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 60, 730, 350));

        jTextField_referencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_referenciaActionPerformed(evt);
            }
        });
        jTextField_referencia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_referenciaKeyTyped(evt);
            }
        });
        add(jTextField_referencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 35, 283, -1));

        bttNewProd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/System/Images/Buttons/addBtt.png"))); // NOI18N
        bttNewProd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bttNewProdMouseClicked(evt);
            }
        });
        add(bttNewProd, new org.netbeans.lib.awtextra.AbsoluteConstraints(4, 50, -1, -1));

        bttWatch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/System/Images/Buttons/watchBtt.png"))); // NOI18N
        bttWatch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bttWatchMouseClicked(evt);
            }
        });
        add(bttWatch, new org.netbeans.lib.awtextra.AbsoluteConstraints(4, 110, -1, -1));

        bttTrash.setIcon(new javax.swing.ImageIcon(getClass().getResource("/System/Images/Buttons/trashBtt.png"))); // NOI18N
        bttTrash.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bttTrashMouseClicked(evt);
            }
        });
        add(bttTrash, new org.netbeans.lib.awtextra.AbsoluteConstraints(4, 170, -1, -1));

        bttSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/System/Images/Buttons/searchBtt.png"))); // NOI18N
        bttSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bttSearchMouseClicked(evt);
            }
        });
        add(bttSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(4, 230, -1, -1));

        bttExcel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/System/Images/Buttons/listBtt.png"))); // NOI18N
        bttExcel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bttExcelMouseClicked(evt);
            }
        });
        add(bttExcel, new org.netbeans.lib.awtextra.AbsoluteConstraints(4, 290, -1, -1));

        bttLabels.setIcon(new javax.swing.ImageIcon(getClass().getResource("/System/Images/Buttons/labelsBtt.png"))); // NOI18N
        bttLabels.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bttLabelsMouseClicked(evt);
            }
        });
        add(bttLabels, new org.netbeans.lib.awtextra.AbsoluteConstraints(4, 350, -1, -1));

        bttSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/System/Images/Buttons/saveBtt.png"))); // NOI18N
        bttSave.setToolTipText("");
        bttSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bttSaveMouseClicked(evt);
            }
        });
        add(bttSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 420, -1, -1));

        bttPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/System/Images/Buttons/printBtt.png"))); // NOI18N
        bttPrint.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bttPrintMouseClicked(evt);
            }
        });
        add(bttPrint, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 420, -1, -1));

        txtDscr.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtDscr.setForeground(new java.awt.Color(255, 255, 255));
        txtDscr.setText("Descripcion");
        add(txtDscr, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 5, -1, -1));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/System/Images/Panel1/panelNF.png"))); // NOI18N
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_CrearProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CrearProductoActionPerformed
        this.CrearProducto();
        
       
    }//GEN-LAST:event_jButton_CrearProductoActionPerformed

    private void jButton_CrearProductoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton_CrearProductoKeyPressed
        if (evt.getKeyCode() == 10) {
            this.CrearProducto();
        }
    }//GEN-LAST:event_jButton_CrearProductoKeyPressed

    private void jButton_CancelarCrearProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CancelarCrearProductoActionPerformed
        this.clearCrearProducto();
        this.jDialog_CrearProducto.dispose();
        //Para que el usuario se mantenga en la tabla
        this.setFocusTablaMovimiento(0);
    }//GEN-LAST:event_jButton_CancelarCrearProductoActionPerformed

    private void jButton_CancelarCrearProductoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton_CancelarCrearProductoKeyPressed
        if (evt.getKeyCode() == 10) {
            this.jButton_CancelarCrearProducto.doClick();
        }
    }//GEN-LAST:event_jButton_CancelarCrearProductoKeyPressed

    private void jFormattedTextField_precioProductoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextField_precioProductoFocusGained
        this.jFormattedTextField_precioProducto.selectAll();
    }//GEN-LAST:event_jFormattedTextField_precioProductoFocusGained

    private void jFormattedTextField_precioProductoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextField_precioProductoKeyPressed
        if (evt.isControlDown()) {
            evt.consume();
        }
    }//GEN-LAST:event_jFormattedTextField_precioProductoKeyPressed

    private void jFormattedTextField_precioProductoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextField_precioProductoKeyTyped
       int tecla = evt.getKeyChar();
        if (tecla == KeyEvent.VK_COMMA) {
            return;
        }
        if (tecla == KeyEvent.VK_PERIOD) {
            return;
        }
        if (!Character.isDigit(tecla) & !Character.isISOControl(evt.getKeyChar())) {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();

        }

        if (KeyEvent.VK_ENTER == evt.getKeyChar()) {
            this.jFormattedTextField_precioProducto.transferFocus();

        }
    }//GEN-LAST:event_jFormattedTextField_precioProductoKeyTyped

    private void jFormattedTextField_cantidadProductoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextField_cantidadProductoFocusGained
        this.jFormattedTextField_cantidadProducto.selectAll();
    }//GEN-LAST:event_jFormattedTextField_cantidadProductoFocusGained

    private void jFormattedTextField_cantidadProductoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextField_cantidadProductoKeyPressed
        if (evt.isControlDown()) {
            evt.consume();
        }
    }//GEN-LAST:event_jFormattedTextField_cantidadProductoKeyPressed

    private void jFormattedTextField_cantidadProductoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextField_cantidadProductoKeyTyped
        int tecla = evt.getKeyChar();

        if (!Character.isDigit(tecla) & !Character.isISOControl(evt.getKeyChar())) {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();

        }

        int limite = 9;
        if (jFormattedTextField_cantidadProducto.getText().length() == limite) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
        if (KeyEvent.VK_ENTER == evt.getKeyChar()) {
            this.jFormattedTextField_cantidadProducto.transferFocus();

        }
    }//GEN-LAST:event_jFormattedTextField_cantidadProductoKeyTyped

    private void jTable_MovimientoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable_MovimientoKeyPressed
        int tecla = evt.getKeyCode();
        if (tecla == KeyEvent.VK_F9) {
            this.eliminarFila();
        }
    }//GEN-LAST:event_jTable_MovimientoKeyPressed

    private void jTextField_referenciaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_referenciaKeyTyped
        int limite = 80;
        if (this.jTextField_referencia.getText().length() >= limite) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();

        }
    }//GEN-LAST:event_jTextField_referenciaKeyTyped

    private void jTextField_codigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_codigoKeyTyped
        int limite = 11;
        if (jTextField_codigo.getText().length() >= limite) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();

        }
        if (Character.isLowerCase(evt.getKeyChar())) {
            evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
        }
        if (KeyEvent.VK_ENTER == evt.getKeyChar()) {
            this.jTextField_codigo.transferFocus();

        }
    }//GEN-LAST:event_jTextField_codigoKeyTyped

    private void jTextField_nombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_nombreKeyTyped
        int limite = 30;
        if (jTextField_nombre.getText().length() >= limite) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();

        }
        if (KeyEvent.VK_ENTER == evt.getKeyChar()) {
            this.jTextField_nombre.transferFocus();

        }
    }//GEN-LAST:event_jTextField_nombreKeyTyped

    private void bttNewProdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bttNewProdMouseClicked
        this.creacionProductoPanel();
    }//GEN-LAST:event_bttNewProdMouseClicked

    private void bttWatchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bttWatchMouseClicked
        if (jTable_Movimiento.isEditing()) {
            jTable_Movimiento.getCellEditor().cancelCellEditing();

        }
        MyTableModel_FACT model = (MyTableModel_FACT) jTable_Movimiento.getModel();
        int row = jTable_Movimiento.getSelectedRow();
        String idProducto = model.getValueAt(row, 0).toString();//obtiene el id
        //del producto seleccionado para VerProducto
        if (!"".equals(idProducto)) {//verifica que se quiere ver un producto
            this.verProducto(idProducto);
        } // Si no selecciono un producto entonces que busque el producto por cod
        else {
            jDialog_BuscarProductoPorCod.setSize(295, 243);
            jDialog_BuscarProductoPorCod.setVisible(true);
        }
    }//GEN-LAST:event_bttWatchMouseClicked

    private void bttTrashMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bttTrashMouseClicked
        this.eliminarFila();
    }//GEN-LAST:event_bttTrashMouseClicked

    private void bttSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bttSearchMouseClicked
        NewJDialog_Buscador buscador = new NewJDialog_Buscador();
        buscador.actualizaTablaParaInventario();
        String id = buscador.getIdProducto();
        if(id==null){
            return;
        }
        MyTableModel_FACT model = (MyTableModel_FACT) jTable_Movimiento.getModel();
        int row = this.jTable_Movimiento.getSelectedRow();
        model.setValueAt(id, row, 0);
        model.addRow(1);
        this.setFocusTablaMovimiento(1);
    }//GEN-LAST:event_bttSearchMouseClicked

    private void bttExcelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bttExcelMouseClicked
        JFileChooser filechooser = new JFileChooser();
        int value = filechooser.showOpenDialog(null);
        this.cargoArchivo = true;
        
        if (value == JFileChooser.APPROVE_OPTION) {
            this.jFormattedTextField_Total.setValue(BigDecimal.ZERO);
            File file = filechooser.getSelectedFile();
            String direccion = (String.valueOf(file));
            try {
                this.cargarMovimiento(direccion);
            } catch (Exception e) {
                this.clearAll();
            }
        }
    }//GEN-LAST:event_bttExcelMouseClicked

    private void bttLabelsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bttLabelsMouseClicked
        //Contiene: Cod,Nombre,Cantidad,Precio del producto
        if (jTable_Movimiento.isEditing()) {
            jTable_Movimiento.getCellEditor().cancelCellEditing();

        }
        if (this.jTable_Movimiento.getValueAt(0, 0).equals("")) {
            JOptionPane.showMessageDialog(
                    null,
                    "No hay productos para generar etiquetas",
                    "Alert!", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String[][] etiquetas = this.obtenerInfoTablaMovimientoParaEtiquetas();
        Imprimir etqt = new Imprimir();
        XMLConfiguracion empresa = XMLConfiguracion.getInstance();
        String[] infoEmpresa = empresa.NombreTelefonoEmpresa();
        etqt.imprimirListaEtiquetas(etiquetas, infoEmpresa);
    }//GEN-LAST:event_bttLabelsMouseClicked

    private void jTextField_referenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_referenciaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_referenciaActionPerformed

    private void bttSaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bttSaveMouseClicked
        this.guardarMovimiento();
    }//GEN-LAST:event_bttSaveMouseClicked

    private void bttPrintMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bttPrintMouseClicked
        if (this.guardarMovimiento()) {
            this.imprimirMovimiento(
                    this.jTable_Movimiento, this.jLabel_NumerodeMovimiento.getText(),
                    this.jLabel_Fecha.getText(),
                    this.jComboBox_LugarDeMov.getSelectedItem().toString(),
                    this.jFormattedTextField_Total.getText(),
                    this.jTextField_referencia.getText());
        }
    }//GEN-LAST:event_bttPrintMouseClicked

    private void jButton2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton2KeyPressed
        if (evt.getKeyCode() == 10) {
            this.setFocusTablaMovimiento(0);
            this.jDialog_VerProducto.dispose();
        }
    }//GEN-LAST:event_jButton2KeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.setFocusTablaMovimiento(0);
        this.jDialog_VerProducto.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton_BusqueProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_BusqueProductoActionPerformed
        this.buscarProducto();
    }//GEN-LAST:event_jButton_BusqueProductoActionPerformed

    private void jButton_BusqueProductoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton_BusqueProductoKeyPressed
        if (evt.getKeyCode() == 10) {
            this.buscarProducto();
        }
    }//GEN-LAST:event_jButton_BusqueProductoKeyPressed

    private void jButton_CancelaBusquedaProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CancelaBusquedaProductoActionPerformed
        this.jDialog_BuscarProductoPorCod.dispose();
        this.jLabel_CodNoEncontrado.setText("");
        this.setFocusTablaMovimiento(0);
    }//GEN-LAST:event_jButton_CancelaBusquedaProductoActionPerformed

    private void jTextField_busqueProductoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_busqueProductoKeyPressed
        if (evt.getKeyCode() == 10) {
            this.jTextField_busqueProducto.transferFocus();

        }
    }//GEN-LAST:event_jTextField_busqueProductoKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JLabel bttExcel;
    javax.swing.JLabel bttLabels;
    javax.swing.JLabel bttNewProd;
    javax.swing.JLabel bttPrint;
    javax.swing.JLabel bttSave;
    javax.swing.JLabel bttSearch;
    javax.swing.JLabel bttTrash;
    javax.swing.JLabel bttWatch;
    javax.swing.JButton jButton2;
    javax.swing.JButton jButton_BusqueProducto;
    javax.swing.JButton jButton_CancelaBusquedaProducto;
    javax.swing.JButton jButton_CancelarCrearProducto;
    javax.swing.JButton jButton_CrearProducto;
    javax.swing.JComboBox jComboBox_LugarDeMov;
    javax.swing.JDialog jDialog_BuscarProductoPorCod;
    javax.swing.JDialog jDialog_CrearProducto;
    javax.swing.JDialog jDialog_VerProducto;
    javax.swing.JFormattedTextField jFormattedTextField_Total;
    javax.swing.JFormattedTextField jFormattedTextField_cantidadProducto;
    javax.swing.JFormattedTextField jFormattedTextField_precioProducto;
    javax.swing.JLabel jLabel1;
    javax.swing.JLabel jLabel17;
    javax.swing.JLabel jLabel18;
    javax.swing.JLabel jLabel2;
    javax.swing.JLabel jLabel3;
    javax.swing.JLabel jLabel4;
    javax.swing.JLabel jLabel5;
    javax.swing.JLabel jLabel6;
    javax.swing.JLabel jLabel7;
    javax.swing.JLabel jLabel8;
    javax.swing.JLabel jLabel9;
    javax.swing.JLabel jLabel_Cantidad;
    javax.swing.JLabel jLabel_CodNoEncontrado;
    javax.swing.JLabel jLabel_Descripcion;
    javax.swing.JLabel jLabel_Fecha;
    javax.swing.JLabel jLabel_Nombre;
    javax.swing.JLabel jLabel_NumerodeMovimiento;
    javax.swing.JLabel jLabel_PrecioUnitario;
    javax.swing.JLabel jLabel_datoCant;
    javax.swing.JLabel jLabel_datoDescrip;
    javax.swing.JLabel jLabel_datoNomb;
    javax.swing.JLabel jLabel_datoPrecio;
    javax.swing.JLabel jLabel_tipoMovimiento;
    javax.swing.JLayeredPane jLayeredPane_VerProducto;
    javax.swing.JPanel jPanel1;
    javax.swing.JPanel jPanel2;
    javax.swing.JScrollPane jScrollPane2;
    javax.swing.JTable jTable_Movimiento;
    javax.swing.JTextField jTextField_busqueProducto;
    javax.swing.JTextField jTextField_codigo;
    javax.swing.JTextField jTextField_nombre;
    javax.swing.JTextField jTextField_referencia;
    javax.swing.JLabel txtDscr;
    // End of variables declaration//GEN-END:variables
    private void creacionProductoPanel() {
        //En caso de que quiera crear un producto mientras se este editando
        if (jTable_Movimiento.isEditing()) {
            jTable_Movimiento.getCellEditor().cancelCellEditing();
            this.jDialog_CrearProducto.setSize(500, 300);
            this.jDialog_CrearProducto.setVisible(true);
            return;
        }
        DocumentFilter onlyNumberFilter = new MyFilter();
        ((AbstractDocument)this.jFormattedTextField_precioProducto.getDocument()).setDocumentFilter(onlyNumberFilter);
        //Llama a la ventana para crear el producto
        this.jDialog_CrearProducto.setSize(500, 300);
        this.jDialog_CrearProducto.setVisible(true);

    }

    /**
     * Este metodo permite mostrar toda la informacion del producto
     *
     * @param idProducto
     */
    private void verProducto(String idProducto) {
        Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
        String articulo = AdminBD.verNombreProductoPorCodigo(idProducto);
        BigDecimal PrecioUnitario = AdminBD.verPrecio(idProducto);
        int cantidad = AdminBD.verCantidadInvGeneral(idProducto);
        jLabel_datoCant.setText(Integer.toString(cantidad));
        jLabel_datoNomb.setText(articulo);
        jLabel_datoPrecio.setText(PrecioUnitario.toString());
        String detalle = AdminBD.verDetalle(idProducto);
        //Si en la base el detalle es null
        if (detalle == null) {
            jLabel_Descripcion.setText("Descripcion  " + "Este producto"
                    + " no tiene ningun detalle");
            jDialog_VerProducto.setVisible(true);
            return;
        }
        jLabel_Descripcion.setText("Descripcion  " + detalle);
        jDialog_VerProducto.setVisible(true);

    }

    /**
     * Este metodo es para poder eliminar una fila de la tabla de crear
     * movimiento
     */
    private void eliminarFila() {
        MyTableModel_FACT model = (MyTableModel_FACT) jTable_Movimiento.getModel();
        int row = jTable_Movimiento.getSelectedRow();
        ///Si se esta escribiendo en la celda para el editor y luego elimina la
        // fila
        if (!model.data.isEmpty()) {
            if (jTable_Movimiento.isEditing()) {
                jTable_Movimiento.getCellEditor().cancelCellEditing();
                jTable_Movimiento.revalidate();
                jTable_Movimiento.repaint();
                jTable_Movimiento.requestFocus();

            }
            String subTotal = model.getValueAt(row, 4).toString();
            if (subTotal != "") {
                //Elimina un producto ya ingresado y actualiza el total
                BigDecimal subtotal = new BigDecimal(subTotal);
                model.removeRow(row);
                BigDecimal totalFact = this.corregirDato(
                        this.jFormattedTextField_Total.getText());
                this.jFormattedTextField_Total.setValue(
                        totalFact.subtract(subtotal));
                jTable_Movimiento.changeSelection(row-1,0,false, false);
                jTable_Movimiento.revalidate();
                jTable_Movimiento.repaint();
                jTable_Movimiento.requestFocus();
                
                
            } else { //Si es vacio el subtotal significa que no tiene que actualizar
                // el subtotal
                model.removeRow(row);
                
                jTable_Movimiento.changeSelection(row-1,0,false, false);
                jTable_Movimiento.revalidate();
                jTable_Movimiento.repaint();
                jTable_Movimiento.requestFocus();
                

            }
        }
        if (model.data.isEmpty()){
            model.addRow(1);
        }
    }

    /**
     * Este metodo permite que vuelva a la tabla y seleciones la fila donde
     * quedo o la siguiente en la tabla movimiento
     *
     * @param cantidad
     */
    private void setFocusTablaMovimiento(int cantidad) {
        
        jTable_Movimiento.changeSelection(jTable_Movimiento.getSelectedRow()
                + cantidad, jTable_Movimiento.getSelectedColumn(), false, false);
        jTable_Movimiento.requestFocus();
        jTable_Movimiento.revalidate();
        jTable_Movimiento.repaint();
    }

    /**
     * Este metodo crea un producto en movimiento
     */
    private void CrearProducto() {
        
        
        Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
        DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
        Date date = new Date();
        String codigo = this.jTextField_codigo.getText();
        
        if(codigo.equals("")){
            
             JOptionPane.showMessageDialog(
                    null,
                    "Por favor ingrese un codigo",
                    "Alert!", JOptionPane.ERROR_MESSAGE);
             this.jTextField_codigo.requestFocusInWindow();
             return;
        
        }
        if(this.jTextField_nombre.getText().equals("")){
            
             JOptionPane.showMessageDialog(
                    null,
                    "Por favor ingrese un nombre para el producto",
                    "Alert!", JOptionPane.ERROR_MESSAGE);
             this.jTextField_nombre.requestFocusInWindow();
             return;
        
        }
        boolean existeProducto = AdminBD.verSiExisteCod(codigo);
        if (!existeProducto) {
            BigDecimal precio_Producto = this.StringtoBigDecimal(
                    this.jFormattedTextField_precioProducto.
                    getText());
            int cantidad=Integer.parseInt(this.jFormattedTextField_cantidadProducto.getText());
            AdminBD.crearProducto(codigo, this.jTextField_nombre.getText(),
                    precio_Producto, BigDecimal.ZERO, dateFormat.format(date), "A", null, 1);
            
            
            
            this.crearMovimiento("Creacion Producto",precio_Producto,1);
            int idVersion= AdminBD.veridVersionActivaProductoPorCodigo(codigo);
            this.guardaProductoEnMovimiento(codigo, idVersion, cantidad, precio_Producto);
            
            
            this.clearCrearProducto();
            this.jDialog_CrearProducto.dispose();
            MyTableModel_FACT model = (MyTableModel_FACT) jTable_Movimiento.getModel();
            model.setValueAt(codigo, jTable_Movimiento.getSelectedRow(), 0);
            //Vuelve a cargar la informacion para el editor de la primer columna
            this.clearCrearProducto();
            this.cargarSeleccionadorProductos();
            model.addRow(1);
            this.setFocusTablaMovimiento(1);
        } else {
            JOptionPane.showMessageDialog(
                    null,
                    "ESTE Cod ya existe en el inventario",
                    "Alert!", JOptionPane.ERROR_MESSAGE);
            this.jTextField_codigo.setText("");
            this.jButton_CrearProducto.transferFocus();
            this.jButton_CancelarCrearProducto.transferFocus();
        }
    }

    private void clearCrearProducto() {
        this.jTextField_codigo.setText("");
        this.jTextField_nombre.setText("");
        this.jFormattedTextField_cantidadProducto.setText("0");
        this.jFormattedTextField_precioProducto.setText("0.00");

    }

    /**
     * Permite buscar el producto cuando el usuario presiona el boton buscar
     * producto en crear movimiento(Entrada o Salida de Mercaderia)
     */
    private void buscarProducto() {
        Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
        String idProducto = this.jTextField_busqueProducto.getText();
        boolean existeProducto = AdminBD.verSiExisteCod(idProducto);
        if (existeProducto) {
            this.jDialog_BuscarProductoPorCod.dispose();
            this.verProducto(idProducto);
            this.jTextField_busqueProducto.setText("");
            this.jLabel_CodNoEncontrado.setText("");
            return;
        }
        this.jLabel_CodNoEncontrado.setText("Cod. No Existe");
        this.jTextField_busqueProducto.setText("");
        this.jButton_BusqueProducto.transferFocus();
        this.jButton_CancelaBusquedaProducto.transferFocus();
    }

    /**
     * Este metodo permite personalizar la tabla de crear Movimiento
     */
    public void personalizarTablaMovimiento() {
        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        Date date = new Date();
        this.jLabel_Fecha.setText(dateFormat.format(date));
        String[] columnNames = {"Cod. Articulo", "Articulo",
            "Cantidad", "Precio.Unit",
            "Sub-Total"};
        List<Object[]> data = new ArrayList<Object[]>();
        //Agrega el modelo a la factura
        MyTableModel_FACT model = new MyTableModel_FACT(columnNames, data);
        //Agrega 20 filas
        model.addRow(1);
        this.jTable_Movimiento.setModel(model);

    }

    /**
     * De vuelve un String[] con toda la informacion de una fila de una tabla
     *
     * @param data //Viene de un consulta UNICAMENTE de una fila
     * @return
     */
    private String[] obtenerFila(Object[][] data) {
        //System.out.println("ESTO ES LO QUE QUIERO");
        int numFilas = data.length;
        String[] string = new String[numFilas];
        int numColumnas = data[0].length;
        for (int row = 0; row < numFilas; row++) {
            for (int column = 0; column < numColumnas; column++) {
                string[row] = data[row][column].toString();

            }

        }
        return string;
    }

    /**
     * Este metodo permite corregir el dato que tiene el signo de C y ademas que
     * puede tener comas ya que el tipo Decimal en la base solo puede tener
     * puntos y no comas.
     *
     * @param Dato
     * @return
     */
    private BigDecimal corregirDato(String Dato) {
        String datoAcorregir = Dato.replace("C", "");
        DecimalFormat decimalformat = (DecimalFormat) NumberFormat.getInstance();
        decimalformat.setParseBigDecimal(true);
        BigDecimal DatoCorregido = null;
        try {
            DatoCorregido = (BigDecimal) decimalformat.parseObject(datoAcorregir);
        } catch (ParseException ex) {
            Logger.getLogger(MyTableModelListener_FACT.class.getName()).log(Level.SEVERE, null, ex);
        }
        return DatoCorregido;

    }

    /**
     * Este metodo convierte un string que es un decimal a bigdecimal
     *
     * @param numero
     * @return
     */
    private BigDecimal StringtoBigDecimal(String numero) {
        DecimalFormat decimalfC = (DecimalFormat) NumberFormat.getInstance();
        decimalfC.setParseBigDecimal(true);
        BigDecimal numeroCorregido = null;
        try {
            numeroCorregido = (BigDecimal) decimalfC.parseObject(numero);
        } catch (ParseException ex) {
            Logger.getLogger(JPanel_VerFactura.class.getName()).log(Level.SEVERE, null, ex);
        }
        return numeroCorregido;

    }

    public void agregarListenerRenders() {
        Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
        //Gana la atencion en el panel
        jTable_Movimiento.requestFocus();
        jTable_Movimiento.changeSelection(0, 0, false, false);
        //AGREGA EL LISTENER QUE PERMITE HACER TODOS LOS EVENTOS DENTRO DE LA 
        //TABLA DE FACTURA //IMPORTANTE ESTOS EVENTOS ESTAN EN LA CLASE DE
        //MY TABLE MODEL LISTENER EN el metodo: tableChanged(TableModelEvent e)
        this.jTable_Movimiento.getModel().addTableModelListener(
                new MyTableModelListener_FACT(this.jTable_Movimiento, "",
                        this.jFormattedTextField_Total, AdminBD));

        //Costumisando Precio y Cantidad (Solo van a permitir numeros)
        DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
        rightRenderer.setHorizontalAlignment(JLabel.RIGHT);

        this.jTable_Movimiento.getColumnModel().getColumn(2).
                setCellRenderer(rightRenderer);
        this.jTable_Movimiento.getColumnModel().getColumn(3).
                setCellRenderer(new CurrencyRender());
        this.jTable_Movimiento.getColumnModel().getColumn(4).
                setCellRenderer(new CurrencyRender());
        this.jTable_Movimiento.getColumnModel().getColumn(2).
                setCellEditor(new EditorDeCelda_Cantidad());
        this.jTable_Movimiento.getColumnModel().getColumn(3).
                setCellEditor(new EditorDeCeldaNumeros());
        //Demasiado importante ******Permite que se pueda editar apenas se 
        //ingresan datos*****
        this.jTable_Movimiento.setSurrendersFocusOnKeystroke(true);

    }

    public void cargarSeleccionadorProductos() {
        Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
        AdminBD.verCodigos();
        //Permite que la primera columna de Codigos se desplace segun lo que
        // haya en la base de datos
        //Si no existen productos en la base que no los carge al editor
        if (AdminBD.getData().length <= 0) {
            return;
        }
        String[] idproductos = this.obtenerFila(AdminBD.getData());
        this.jTable_Movimiento.getColumnModel().getColumn(0).
                setCellEditor(new SeleccionadorEditor(idproductos, jTable_Movimiento));

    }

    private boolean guardarMovimiento() {
        if (this.jTextField_referencia.getText().equals("")) {
            JOptionPane.showMessageDialog(
                    null,
                    "Debe de ingresar una referencia de la entrada de mercaderia",
                    "Alert!", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if(this.jTable_Movimiento.getValueAt(0,0).equals("")){
            JOptionPane.showMessageDialog(
                    null,
                    "Debe de ingresar algun producto",
                    "Alert!", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        JF_Inventario.getInstance().refreshActiveTable();
        this.crearMovimiento();
        this.guardarProductosMovimiento();
        this.clearAll();
        return true;
    }

    private void crearMovimiento() {
        Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
        String detalle = this.jTextField_referencia.getText();
        int idLugarMovimiento = 1;
        if (this.jComboBox_LugarDeMov.getSelectedItem().toString().equals("Bodega")) {
            idLugarMovimiento = 2;

        }
        BigDecimal valorMovimiento = this.corregirDato(this.jFormattedTextField_Total.getText());
        if (_callType == SALIDA) {
            AdminBD.insertarmovimiento(detalle, 2, idLugarMovimiento, valorMovimiento);
        } else {
            AdminBD.insertarmovimiento(detalle, 1, idLugarMovimiento, valorMovimiento);
        }
        
    }

    private void guardarProductosMovimiento() {
        Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
        MyTableModel_FACT model = (MyTableModel_FACT) this.jTable_Movimiento.getModel();
        String[][] infoTablaMov = this.obtenerInfoTablaMovimiento();
        int rows = infoTablaMov.length;
        int idMovimiento = AdminBD.ObtenerUltimoidMovimiento();
        //Recorre la informacion de la tabla para obtener los datos para 
        //insertar los productos en el movimiento
        for (int i = 0; i < rows; i++) {
            //Si la fila esta vacia
            if (!model.getValueAt(i, 0).equals("")) {
                String idProducto = infoTablaMov[i][0];
                int idVersion = AdminBD.veridVersionActivaProductoPorCodigo(idProducto);
                String CantidadSinCorregir = infoTablaMov[i][2].toString();
                DecimalFormat decimalfC = (DecimalFormat) NumberFormat.getInstance();
                decimalfC.setParseBigDecimal(true);
                BigDecimal cantidadB = null;
                try {
                    cantidadB = (BigDecimal) decimalfC.parseObject(CantidadSinCorregir);
                } catch (ParseException ex) {
                    Logger.getLogger(MyTableModelListener_FACT.class.
                            getName()).log(Level.SEVERE, null, ex);
                }
                int cantidadMov = cantidadB.intValue();
                String precioSinCorregir = infoTablaMov[i][3];
                BigDecimal PrecioVenta = this.corregirDato(precioSinCorregir);
                //System.out.println(idProducto+" "+idVersion+" "+idMovimiento+" "+cantidadMov+" "+PrecioVenta);
                AdminBD.insertarProductoCantidadMovimiento(idProducto, idVersion, idMovimiento, cantidadMov, PrecioVenta);

            }
        }
    }

    /**
     * Este metodo devuelve toda la informacion de la tabla de crear movimiento
     *
     * @return
     */
    private String[][] obtenerInfoTablaMovimiento() {
        MyTableModel_FACT model = (MyTableModel_FACT) this.jTable_Movimiento.getModel();
        int filas = model.getRowCount();
        String[][] infoTablaFactura = new String[filas][5];
        for (int i = 0; i < filas; i++) {
            for (int j = 0; j < 5; j++) {
                if (model.getValueAt(i, j) != null) {
                    String om = model.getValueAt(i, j).toString();
                    if (om.trim().length() != 0) {
                        infoTablaFactura[i][j] = om;
                    }
                }
            }
        }
        return infoTablaFactura;
    }

    private void clearAll() {

        jComboBox_LugarDeMov.setSelectedIndex(0);
        jTextField_referencia.setText("");
        
        
        Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
        String factura = Integer.toString(AdminBD.ObtenerUltimoidMovimiento() + 1);
        jLabel_NumerodeMovimiento.setText(factura);
        
        jTable_Movimiento.setModel(new DefaultTableModel());

        jFormattedTextField_Total.setValue(BigDecimal.ZERO);
        
        DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
        Date date = new Date();
        jLabel_Fecha.setText(dateFormat.format(date));
        
        
    }

    private void cargarMovimiento(String direccion) {
        Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
        ReadExcel excel = new ReadExcel();
        String[] columnNames = {"Cod. Articulo", "Articulo",
            "Cantidad", "Precio.Unit",
            "Sub-Total"};
        List<Object[]> data = new ArrayList<Object[]>();
        //Agrega el modelo a la factura
        MyTableModel_FACT model = new MyTableModel_FACT(columnNames, data);
        this.jTable_Movimiento.setModel(model);
        this.agregarListenerRenders();
        String[][] inventario = excel.leerArchivoExcel(new File(direccion));
        int numFilas = inventario.length;
        for (int row = 0; row < numFilas; row++) {
            try {
                String idProducto = inventario[row][0];
                if (idProducto.equals("")) {
                    continue;
                }
                model.addRow(1);
                int cantidad;
                if (inventario[row][2].equals("")) {
                    cantidad = 0;
                } else {
                    cantidad = Integer.parseInt(inventario[row][2]);
                }
                BigDecimal precio;
                if (inventario[row][3].equals("")) {
                    precio = BigDecimal.ZERO;
                } else {
                    precio = this.StringtoBigDecimal(inventario[row][3]);
                }
                if (AdminBD.verSiExisteCod(idProducto)) {
                    model.setValueAt(idProducto, row, 0);
                    model.setValueAt(cantidad, row, 2);
                    model.setValueAt(precio, row, 3);
                    AdminBD.actualizarPrecioProducto(idProducto, precio);

                } else {
                    DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
                    Date date = new Date();
                    String fecha = dateFormat.format(date);
                    String nombre = inventario[row][1];
                    BigDecimal costo;
                    if (inventario[row][4].equals("")) {
                        costo = BigDecimal.ZERO;
                    } else {
                        costo = this.StringtoBigDecimal(inventario[row][4]);
                    }
                    String categoria = inventario[row][5];
                    if (categoria.equals("")) {
                        categoria = "General";
                    }
                    int idCategoria = AdminBD.consultarIdCategoriaXNombre(categoria);
                    AdminBD.crearProducto(idProducto, nombre, precio, costo, fecha, "A", "", idCategoria);
                    model.setValueAt(idProducto, row, 0);
                    model.setValueAt(cantidad, row, 2);

                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(
                        null,
                        "Debe de ingresar un archivo de excel con un formato adecuado "
                        + "\nque tenga las columnas especificas de una entrada de mercaderia",
                        "Alert!", JOptionPane.ERROR_MESSAGE);
                this.limpiarProductos();
                this.clearAll();
                return;
            }
        }
        this.jTable_Movimiento.revalidate();
        this.jTable_Movimiento.repaint();
        model.addRow(20);
        //Vuelve a cargar la informacion para el editor de la primer columna
        this.cargarSeleccionadorProductos();
    }

    private void limpiarProductos() {
        Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
        AdminBD.eliminarProductosQueNoTienenInventario();
    }

    private void imprimirMovimiento(JTable table, String numEntrada, String date, String lugarEntrada, String totalEntrada, String referencia) {
        try {
            String rawCmds = "FIRST NAME";
            String printer = "Generic / Text Only (Copy 3)"; // debe tener 
            //el mismo nombre que la impresora 
            PrintService ps = PrintServiceMatcher.findPrinter(printer);
            if (ps != null) {

                PrintRaw p = new PrintRaw(ps, rawCmds);
                p.clear();
                p.append("\u001B\u0040"); //reset printer 

                p.append("\u001B" + "\u0061" + "\u0001" + "\r");//*** Centrado
                p.append("Boutique Francini\r\n");
                p.append("San Jose, Costa Rica\r\n");
                p.append("Tel:228826962,pulgamontes@gmail.com\r\n");
                p.append("Resolucion nro. 234252 del 2003-89\r\n");
                p.append("\u001B" + "\u0064" + "\u0001" + "\r");//*** 1lineas

                p.append("\u001B" + "\u0061" + "\u0000" + "\r");//Quita Centrado

                String fecha = " Fecha     :  " + date + "";
                //p.append("----------------------------------------\r\n");
                String fechamov = this.fill(fecha, 17, " ");
                p.append(fechamov + "\r\n");
                p.append(this.fill(" Num Mov   :  " + numEntrada + "", fechamov.length(), " ") + "\r\n");
                p.append(this.fill(" Lugar     :  " + lugarEntrada + "", fechamov.length(), " ") + "\r\n");
                p.append(this.fill(" Referencia:  " + referencia + "", fechamov.length(), " ") + "\r\n");

                //Agrega 1 linea vacia
                p.append("\u001B" + "\u0064" + "\u0001" + "\r");
                p.append("CANT. \t DESCRIPCION \t      TOTAL\r\n");
                p.append("----  ----------------       ------\r\n");

                /**
                 * ********************************************************
                 */
                MyTableModel_FACT dtm = (MyTableModel_FACT) table.getModel();
                int nRow = dtm.getRowCount();
                for (int i = 0; i < nRow; i++) {
                    String Producto = dtm.getValueAt(i, 1).toString();
                    if (!Producto.equals("")) {
                        String cantidad = dtm.getValueAt(i, 2).toString();
                        String subtotal = dtm.getValueAt(i, 4).toString();
                        p.append("" + Producto + "   \r\n");
                        p.append("" + cantidad + "                           "
                                + "" + subtotal + "   \r\n");
                    }

                }

                p.append("\u001B" + "\u0061" + "\u0002" + "\r");//*** Derecha
                p.append("\u001B" + "\u0064" + "\u0003" + "\r");//*** 1lineas
                String subto = " T O T A L : \t " + totalEntrada + "";
                String subtoCantidad = this.fill(subto, 35, " ");
                p.append(subtoCantidad + "\r\n");

                p.append("\u001B\u0040");//reset printer
                p.append("\u001B" + "\u0064" + "\u0008" + "\r");//*** 10lineas**/
                p.append("\u001D" + "\u0056" + "\u0001" + "\r");//*** CutPaper

                p.print();

            } else {
                System.err.println("No encontro ninguna impresora");
                return;
            }

        } catch (Exception e) {
            e.printStackTrace();
            return;
        }
    }

    public String fill(int length, String with) {
        StringBuilder sb = new StringBuilder(length);
        while (sb.length() < length) {
            sb.append(with);
        }
        return sb.toString();
    }

    public String fill(String value, int length, String with) {

        StringBuilder result = new StringBuilder(length);
        result.append(value);
        result.append(fill(Math.max(0, length - value.length()), with));

        return result.toString();

    }

    private String[][] obtenerInfoTablaMovimientoParaEtiquetas() {
        MyTableModel_FACT model = (MyTableModel_FACT) this.jTable_Movimiento.getModel();
        int filas = model.getRowCount();
        String[][] infoTablaFactura = new String[filas][4];
        for (int i = 0; i < filas; i++) {
            for (int j = 0; j < 4; j++) {
                if (model.getValueAt(i, j) != null) {
                    String om = model.getValueAt(i, j).toString();
                    if (om.trim().length() != 0) {
                        infoTablaFactura[i][j] = om;

                    }
                }
            }

        }
        return infoTablaFactura;
    }
    
     private void crearMovimiento(String detalle, BigDecimal precioProd, int movimiento) {
        Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
        AdminBD.insertarmovimiento(detalle,movimiento,1,precioProd);
    }
    
    private void guardaProductoEnMovimiento(String idProducto, int idVersion, int cantidadMov, BigDecimal PrecioVenta) {
        Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
        int idMovimiento= AdminBD.ObtenerUltimoidMovimiento();
        AdminBD.insertarProductoCantidadMovimiento(idProducto,idVersion,idMovimiento,cantidadMov,PrecioVenta);
    }

}
