/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package joe;


import db_managment.Direct_Control_BD;
import java.awt.event.KeyEvent;
import java.math.BigDecimal;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author edward
 */
public final class Pan_Movimientos extends javax.swing.JPanel {

    /**
     * Creates new form JPanel_Inventario
     */
    
    private static Pan_Movimientos mPanelInventario=null;
    boolean ctrlPressed = false;
    boolean cPressed = false;
        
    public Pan_Movimientos() {
        initComponents();
        personalizarTablaVerMovimientos();         
    }
    
    public static Pan_Movimientos getInstance(){
        if(mPanelInventario==null)
        {
            mPanelInventario=new Pan_Movimientos();
        }
        
        return mPanelInventario;
        
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane6 = new javax.swing.JScrollPane();
        jTable_verMovimientos = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        jTextField_codProd = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel_descripcionProd = new javax.swing.JLabel();
        jLabel_cantBodegaProd = new javax.swing.JLabel();
        jLabel_cantInvGeneral = new javax.swing.JLabel();
        jLabel_precioVenta = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setMinimumSize(new java.awt.Dimension(760, 400));
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(760, 400));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable_verMovimientos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTable_verMovimientos.setCellSelectionEnabled(true);
        jTable_verMovimientos.setFillsViewportHeight(true);
        jTable_verMovimientos.setSurrendersFocusOnKeystroke(true);
        jScrollPane6.setViewportView(jTable_verMovimientos);

        add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 760, 290));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("Producto");
        add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, -1, 20));

        jTextField_codProd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField_codProdKeyPressed(evt);
            }
        });
        add(jTextField_codProd, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 0, 95, -1));

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel18.setText("Descripcion:");
        add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, 20));

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel19.setText("Cantidad Bodega:");
        add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, 20));

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel20.setText("Cantidad Inv General:");
        add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 40, -1, 20));

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel21.setText("Precio Venta:");
        add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 40, -1, 20));

        jLabel_descripcionProd.setBackground(new java.awt.Color(153, 153, 153));
        jLabel_descripcionProd.setText("lorem ipsum");
        jLabel_descripcionProd.setToolTipText("");
        add(jLabel_descripcionProd, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 80, 490, 20));

        jLabel_cantBodegaProd.setText("##");
        add(jLabel_cantBodegaProd, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 40, 70, 20));

        jLabel_cantInvGeneral.setText("##");
        add(jLabel_cantInvGeneral, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 40, 70, 20));

        jLabel_precioVenta.setText("##");
        jLabel_precioVenta.setToolTipText("");
        add(jLabel_precioVenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 40, 110, 20));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/System/Images/Buttons/searchLttBlckBtt.png"))); // NOI18N
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents
    
    private void jTextField_codProdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_codProdKeyPressed
        if(evt.getKeyChar()== KeyEvent.VK_ENTER){
            this.cargarMovimientoPorProd(this.jTextField_codProd.getText());

        }
    }//GEN-LAST:event_jTextField_codProdKeyPressed

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        this.verProducto();
    }//GEN-LAST:event_jLabel1MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel_cantBodegaProd;
    private javax.swing.JLabel jLabel_cantInvGeneral;
    private javax.swing.JLabel jLabel_descripcionProd;
    private javax.swing.JLabel jLabel_precioVenta;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable jTable_verMovimientos;
    private javax.swing.JTextField jTextField_codProd;
    // End of variables declaration//GEN-END:variables

    private void verEntrada(JTable table, String title) {
          int row = table.getSelectedRow();
            if (row >= 0) {
                VentanaDeInicio mVentana = VentanaDeInicio.getInstance();
                JPanel_verEntradaSalidaMercaderia panelVerMovimientoEntradaSalida = new JPanel_verEntradaSalidaMercaderia();
                mVentana.add(panelVerMovimientoEntradaSalida);
                panelVerMovimientoEntradaSalida.setSize(this.getSize());
                panelVerMovimientoEntradaSalida.setLocation(this.getLocation());
                mVentana.remove(this);
                panelVerMovimientoEntradaSalida.setVisible(true);
                mVentana.revalidate();
                mVentana.repaint();
                mVentana.setTitle(title);
                if(title.equals("Ver Salida de Mercaderia")){
                    panelVerMovimientoEntradaSalida.jLabel_tipoMov.setText("Salida de:");
                }
                Modelo_Facturacion model = (Modelo_Facturacion) table.getModel();
                panelVerMovimientoEntradaSalida.jLabel_NumerodeMovimiento.setText(model.getValueAt(row, 0).toString());
                panelVerMovimientoEntradaSalida.personalizarTablaVerMovimiento();
            } else {
                JOptionPane.showMessageDialog(
                        null,
                        "No se selecciono ninguna entrada de mercaderia",
                        "Alert!", JOptionPane.ERROR_MESSAGE);
            }
    }

    private void verProducto() {
        NewJDialog_Buscador buscador = new NewJDialog_Buscador();
        buscador.actualizaTablaParaInventario();
        String id = buscador.getIdProducto();
        this.jTextField_codProd.setText(id);
        this.cargarMovimientoPorProd(id);
        
        }

    public void personalizarTablaVerMovimientos() {
       
        String[] columnNames = {"Fecha", "Detalle",
            "Tipo Movimiento", "Lugar Movimiento",
            "Cantidad", "Balance","Precio"};
        //Crea la tabla generica para Facturas
        this.jTable_verMovimientos.setModel(new Modelo_verMovimientos(columnNames,new Object[0][0]));
        //Alinea la primer columna de esta tabla hacia el centro
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer
                ();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
        this.jTable_verMovimientos.getColumnModel().getColumn(0).setCellRenderer
                (centerRenderer);
    }

    private void cargarMovimientoPorProd(String idProd) {
        this.cargarInfoProductoMovimiento(idProd);
        Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
        Modelo_verMovimientos model= (Modelo_verMovimientos) this.jTable_verMovimientos.getModel();
        AdminBD.verMovimientoPorProducto(idProd);
        Object[][] data= AdminBD.getData();
        ArrayList<Object[]> arrayList = new ArrayList<Object[]>(Arrays.asList(data));
        model.data=arrayList;
        
        RowSorter<Modelo_verMovimientos> sorter= new TableRowSorter<Modelo_verMovimientos>(model);
        this.jTable_verMovimientos.setRowSorter(sorter);
        List<RowSorter.SortKey> sortKeys = new ArrayList<RowSorter.SortKey>();
        sortKeys.add(new RowSorter.SortKey(0, SortOrder.ASCENDING));
        sorter.setSortKeys(sortKeys);
        
        model.fireTableDataChanged();
        model.addRow(20);
        
               
        
    }

    private void cargarInfoProductoMovimiento(String idProd) {
        Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
        String descripcion=AdminBD.verDescripcion(idProd);
        int CantidadBodega= AdminBD.verCantidadBodega(idProd);
        int CantidadInvGeneral = AdminBD.verCantidadInvGeneral(idProd);
        BigDecimal PrecioVenta = AdminBD.verPrecio(idProd);
        this.jLabel_descripcionProd.setText(descripcion);
        this.jLabel_cantBodegaProd.setText(Integer.toString(CantidadBodega));
        this.jLabel_cantInvGeneral.setText(Integer.toString(CantidadInvGeneral));
        this.jLabel_precioVenta.setText(PrecioVenta.toString());
    }

    private void agregarBuscador(JTable table, JTextField textfield, int columna) {
         //Crea el ordenador para la tabla generica
        TableRowSorter<TableModel> ordenador = new TableRowSorter<TableModel>
                (table.getModel());
        table.setRowSorter(ordenador);
        Vector<RowSorter.SortKey> qq = new Vector<RowSorter.SortKey>();
        qq.add(new RowSorter.SortKey(0,SortOrder.ASCENDING));
        ordenador.setSortKeys(qq);
        /**Agrega el listener al JtextField del buscador **/
        textfield.getDocument().addDocumentListener(new
                ListenerBuscador(textfield,ordenador,columna));
    }
    
     /**
     * Este metodo convierte un string que es un decimal a bigdecimal
     *
     * @param numero
     * @return
     */
    private BigDecimal StringtoBigDecimal(String numero) {
        DecimalFormat decimalfC = (DecimalFormat) NumberFormat.getInstance();
        decimalfC.setParseBigDecimal(true);
        BigDecimal numeroCorregido = null;
        try {
            numeroCorregido = (BigDecimal) decimalfC.parseObject(numero);
        } catch (ParseException ex) {
            Logger.getLogger(JPanel_VerFactura.class.getName()).log(Level.SEVERE, null, ex);
        }
        return numeroCorregido;

    }
    
    private void crearMovimiento(String detalle, BigDecimal precioProd, int movimiento) {
        Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
        AdminBD.insertarmovimiento(detalle,movimiento,1,precioProd);
    }
    
    private void guardaProductoEnMovimiento(String idProducto, int idVersion, int cantidadMov, BigDecimal PrecioVenta) {
        Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
        int idMovimiento= AdminBD.ObtenerUltimoidMovimiento();
        AdminBD.insertarProductoCantidadMovimiento(idProducto,idVersion,idMovimiento,cantidadMov,PrecioVenta);
    }


    
}
